function FileData_Pairs(x)
{
x.t("coding","wavelet");
x.t("coding","blocks");
x.t("coding","mechanisms");
x.t("example","compression");
x.t("example","older");
x.t("example","ratios");
x.t("example","compress");
x.t("example","image");
x.t("lossless","compression");
x.t("lossless","lossy");
x.t("lossless","compressed");
x.t("lossless","progressive");
x.t("unlike","jpeg");
x.t("equal","facility");
x.t("ignore","opacity");
x.t("supports","progressive");
x.t("particularly","useful");
x.t("four","modes");
x.t("modes","flexibly");
x.t("modes","hierarchical");
x.t("complex","interactions");
x.t("possible","degree");
x.t("method","lossless");
x.t("method","area");
x.t("method","fastest");
x.t("available","lossless");
x.t("available","single");
x.t("available","lossy");
x.t("available","range");
x.t("manner","analysis");
x.t("provide","further");
x.t("provide","level");
x.t("provide","image");
x.t("properties","advantages");
x.t("internet","jpeg");
x.t("compression","lossless");
x.t("compression","example");
x.t("compression","available");
x.t("compression","10gb");
x.t("compression","within");
x.t("compression","wavelet");
x.t("compression","wizard");
x.t("compression","refers");
x.t("compression","sacrifices");
x.t("compression","uses");
x.t("compression","unified");
x.t("compression","today");
x.t("compression","tap");
x.t("compression","introduction");
x.t("compression","time");
x.t("compression","ratios");
x.t("compression","engine");
x.t("compression","single");
x.t("compression","results");
x.t("compression","bits");
x.t("compression","performance");
x.t("compression","disadvantage");
x.t("compression","provides");
x.t("compression","techniques");
x.t("compression","inherently");
x.t("compression","issues");
x.t("compression","feature");
x.t("compression","widely");
x.t("compression","ecw");
x.t("compression","capability");
x.t("compression","performing");
x.t("compression","least");
x.t("compression","threshold");
x.t("compression","architecture");
x.t("compression","scheme");
x.t("compression","involves");
x.t("compression","several");
x.t("compression","imagery");
x.t("compression","rates");
x.t("compression","process");
x.t("compression","jpeg");
x.t("compression","image");
x.t("compression","practical");
x.t("compression","decompression");
x.t("compression","used");
x.t("compression","ratio");
x.t("compression","higher");
x.t("digital","cameras");
x.t("digital","imaging");
x.t("digital","imagery");
x.t("digital","image");
x.t("ubiquitous","time");
x.t("efficiently","drives");
x.t("10gb","color");
x.t("rather","quantization");
x.t("advantages","wavelet");
x.t("version","4.1");
x.t("measure","resolution");
x.t("measure","random");
x.t("770","776");
x.t("anywhere","uncompressed");
x.t("within","coding");
x.t("within","few");
x.t("within","highly");
x.t("within","compressed");
x.t("within","code-stream");
x.t("within","jpeg");
x.t("files","unlike");
x.t("files","exactly");
x.t("files","opacity");
x.t("files","disk");
x.t("smart","data");
x.t("progression","tiling");
x.t("scalable","different");
x.t("currently","effective");
x.t("wavelet","method");
x.t("wavelet","compression");
x.t("wavelet","filters");
x.t("wavelet","images");
x.t("wavelet","transformation");
x.t("wavelet","mathematics");
x.t("wavelet","based");
x.t("wavelet","levels");
x.t("wavelet","transform");
x.t("wavelet","popular");
x.t("uncompressed","imagery");
x.t("uncompressed","image");
x.t("topographic","maps");
x.t("experience","fast");
x.t("describes","ecw");
x.t("compression/decompression","technique");
x.t("refer","compression");
x.t("bi-level","images");
x.t("required","viewing");
x.t("required","section");
x.t("once","image");
x.t("wizard","reads");
x.t("scaling","translation");
x.t("flipping","cropping");
x.t("source","image");
x.t("instance","support");
x.t("related","information");
x.t("embraces","entire");
x.t("storing","intermediate");
x.t("limits","speed");
x.t("hdtv","signal");
x.t("few","percent");
x.t("tone","color");
x.t("refers","whole");
x.t("multiprocessor","optimizations");
x.t("multiprocessor","systems");
x.t("current","future");
x.t("continuous","tone");
x.t("flexibly","specified");
x.t("container","suite");
x.t("field","image");
x.t("sacrifices","data");
x.t("uses","tap");
x.t("uses","asymmetrical");
x.t("uses","breakthrough");
x.t("uses","block-based");
x.t("(dwt)","quantization");
x.t("cache","linear");
x.t("guaranteed","compression");
x.t("guaranteed","latency");
x.t("line","line");
x.t("line","stream");
x.t("unified","compression");
x.t("776","3500");
x.t("776","3400");
x.t("today","wavelet");
x.t("highly","compressed");
x.t("modern","wavelet");
x.t("working","large");
x.t("tap","integer-based");
x.t("tap","floating");
x.t("facility","ecw");
x.t("support","addition");
x.t("support","nitf");
x.t("support","encoding");
x.t("errors","within");
x.t("introduction","digital");
x.t("obtained","digital");
x.t("obtained","lossy");
x.t("obtained","selected");
x.t("unidirectional","data");
x.t("best","expensive");
x.t("best","encoding");
x.t("older","versions");
x.t("substantial","performance");
x.t("substantial","revision");
x.t("time","compression");
x.t("time","jpeg");
x.t("time","defined");
x.t("time","proliferation");
x.t("time","subsequent");
x.t("sub-bands","wavelet");
x.t("sub-bands","prior");
x.t("sub-bands","encoding");
x.t("fly","displayed");
x.t("zooming","imagery");
x.t("decompressing","ecw");
x.t("sequential","modes");
x.t("sequential","encoding");
x.t("gray","scale");
x.t("hierarchical","lossless");
x.t("hierarchical","progressive");
x.t("becoming","ubiquitous");
x.t("down","500mb");
x.t("form","compression");
x.t("wavelet-based","compression");
x.t("recalled","during");
x.t("multiple","techniques");
x.t("multiple","different");
x.t("multiple","encoding");
x.t("jpeg2000","sdk");
x.t("international","standard");
x.t("photographic","experts");
x.t("rate","performance");
x.t("rate","conditions");
x.t("original","size");
x.t("original","jpeg");
x.t("original","image");
x.t("speed","size");
x.t("speed","ecw");
x.t("speed","advantage");
x.t("require","intermediate");
x.t("gone","dwt");
x.t("automatically","chooses");
x.t("filters","speed");
x.t("filters","used");
x.t("requirement","equal");
x.t("channel","encoded");
x.t("channel","ecw");
x.t("checks","block");
x.t("detect","rectify");
x.t("ratios","example");
x.t("ratios","around");
x.t("ratios","100:1");
x.t("ratios","whilst");
x.t("new","technique");
x.t("details","required");
x.t("engine","leverages");
x.t("engine","larger");
x.t("integer-based","filter");
x.t("single","code");
x.t("single","algorithm");
x.t("link","data");
x.t("access","spatial");
x.t("access","varying");
x.t("access","image");
x.t("low","memory");
x.t("low","bit");
x.t("size","size");
x.t("size","lossy");
x.t("size","chosen");
x.t("size","small");
x.t("size","spatial");
x.t("size","easier");
x.t("size","20:1");
x.t("size","image");
x.t("size","using");
x.t("color","gray");
x.t("color","image");
x.t("asymmetrical","wavelet");
x.t("apollo","image");
x.t("acceptance","digital");
x.t("includes","support");
x.t("includes","lossy");
x.t("code-streams","particularly");
x.t("usually","accessed");
x.t("top","bottom");
x.t("block","coding");
x.t("choice","applications");
x.t("compliant","npje");
x.t("need","datastore");
x.t("file","size");
x.t("file","opacity");
x.t("file","selected");
x.t("file","exchange");
x.t("file","format");
x.t("file","computer");
x.t("file","jpeg");
x.t("found","broad");
x.t("found","imagery");
x.t("cpu","cache");
x.t("cpu","performance");
x.t("cpu","machines");
x.t("standards","storage");
x.t("profiles","specified");
x.t("around","2:1");
x.t("during","compression");
x.t("during","decoding");
x.t("during","dwt");
x.t("group","(jpeg)");
x.t("organization","code-streams");
x.t("improves","measure");
x.t("results","high");
x.t("results","multi-resolution");
x.t("results","hard");
x.t("results","reconstruction");
x.t("results","series");
x.t("images","rather");
x.t("images","compression");
x.t("images","bi-level");
x.t("images","low");
x.t("images","augmenting");
x.t("images","suitable");
x.t("images","compressed");
x.t("images","primary");
x.t("images","less");
x.t("images","imagery");
x.t("images","without");
x.t("lossy","lossless");
x.t("lossy","compression");
x.t("lossy","image");
x.t("lossy","decompressed");
x.t("applies","multiple");
x.t("filter","bank");
x.t("according","interest");
x.t("cropping","capabilities");
x.t("bits","deep");
x.t("quantization","coding");
x.t("quantization","encoded");
x.t("quantization","wavelet-space");
x.t("quantization","encoding");
x.t("augmenting","information");
x.t("large","images");
x.t("large","imagery");
x.t("reasons","ecw");
x.t("features","support");
x.t("domains","scaling");
x.t("selects","spatial");
x.t("degree","fidelity");
x.t("degree","image");
x.t("high","compression");
x.t("high","degree");
x.t("ordinary","computers");
x.t("processed","typically");
x.t("100:1","greater");
x.t("(dct)","blocks");
x.t("decoded","dequantized");
x.t("decoded","varying");
x.t("decoded","work");
x.t("viewed","different");
x.t("potential","provide");
x.t("products","functionality");
x.t("directly","uncompressed");
x.t("channels","version");
x.t("region","interest");
x.t("buffering","entire");
x.t("specified","within");
x.t("specified","nitf");
x.t("desired","images");
x.t("3500","info@erdas.com");
x.t("raft","techniques");
x.t("preserving","minimum");
x.t("stored","disk");
x.t("stored","cd-rom");
x.t("roaming","zooming");
x.t("range","methods");
x.t("range","applications");
x.t("operation","consumes");
x.t("suitable","working");
x.t("acronym","enhanced");
x.t("faster","compressing");
x.t("faster","ecw");
x.t("faster","inverse");
x.t("faster","several");
x.t("equally","good");
x.t("functionality","applications");
x.t("scanners","internet");
x.t("slow","narrow");
x.t("losslessly","jpeg");
x.t("discusses","image");
x.t("approximate","copy");
x.t("reality","wavelet");
x.t("compressing","decompressing");
x.t("compressing","images");
x.t("compressing","using");
x.t("enables","smaller");
x.t("enables","seamless");
x.t("performance","continuous");
x.t("performance","although");
x.t("performance","jpeg");
x.t("performance","improvement");
x.t("exactly","jpeg");
x.t("communication","link");
x.t("hoc","random");
x.t("acronyn","national");
x.t("undergone","encoding");
x.t("discrete","wavelet");
x.t("discrete","cosine");
x.t("disadvantage","lossless");
x.t("limit","approximately");
x.t("accuracy","within");
x.t("perform","dwt");
x.t("component","compression");
x.t("component","within");
x.t("regions","transmitted");
x.t("cameras","scanners");
x.t("cameras","ecw");
x.t("cameras","satellite");
x.t("prior","quantization");
x.t("slower","media");
x.t("slower","dwt");
x.t("provides","current");
x.t("provides","guaranteed");
x.t("provides","lossy");
x.t("provides","integrity");
x.t("provides","superior");
x.t("provides","compressed");
x.t("provides","several");
x.t("methods","within");
x.t("methods","offering");
x.t("floating","point");
x.t("further","benefits");
x.t("reduced","down-link");
x.t("useful","slow");
x.t("subsequently","decompressed");
x.t("epje","profiles");
x.t("scanning","vast");
x.t("heavy","processing");
x.t("implementations","perform");
x.t("makes","wavelet-based");
x.t("makes","jpeg");
x.t("standard","found");
x.t("standard","compressing");
x.t("standard","allows");
x.t("standard","developed");
x.t("standard","nitf");
x.t("standard","(nitfs)");
x.t("standard","jpeg");
x.t("standard","build-up");
x.t("area","image");
x.t("tightly","integrated");
x.t(".ecw","file");
x.t("composed","multi-resolution");
x.t("fast","roaming");
x.t("degradation","original");
x.t("completing","above");
x.t("encoded","decoded");
x.t("encoded","ecw");
x.t("optimizations","ecw");
x.t("writes","compressed");
x.t("web","server");
x.t("sdk","ignore");
x.t("sdk","includes");
x.t("sdk","ecw");
x.t("examines","image");
x.t("bit-error","resilience");
x.t("rectify","errors");
x.t("allows","complex");
x.t("phone","770");
x.t("transformation","(dwt)");
x.t("transformation","(dct)");
x.t("transformation","ecw");
x.t("entire","range");
x.t("entire","code-stream");
x.t("entire","image");
x.t("accessed","randomly");
x.t("integrity","checks");
x.t("employing","discrete");
x.t("multi-resolution","wavelet");
x.t("multi-resolution","images");
x.t("resolution","compression");
x.t("resolution","scalable");
x.t("resolution","size");
x.t("resolution","images");
x.t("resolution","quality");
x.t("resolution","granularities");
x.t("resolution","extract");
x.t("mathematics","embraces");
x.t("patent","pending");
x.t("flow","compressing");
x.t("flow","dwt");
x.t("chooses","method");
x.t("chooses","best");
x.t("stream","uncompressed");
x.t("stream","imagery");
x.t("stream","progressive");
x.t("input","smart");
x.t("input","compress");
x.t("addition","superior");
x.t("chosen","compression");
x.t("techniques","once");
x.t("techniques","automatically");
x.t("techniques","found");
x.t("techniques","equally");
x.t("techniques","enable");
x.t("techniques","measured");
x.t("techniques","encode");
x.t("effective","compression");
x.t("effective","wavelet");
x.t("effective","form");
x.t("effective","retaining");
x.t("quality","improves");
x.t("quality","resolution");
x.t("quality","reconstructed");
x.t("quality","levels");
x.t("advances","processing");
x.t("small","enough");
x.t("opacity","channel");
x.t("opacity","channels");
x.t("opacity","band");
x.t("band","refer");
x.t("random","access");
x.t("random","sequence");
x.t("selected","data");
x.t("selected","subset");
x.t("npje","epje");
x.t("frequency","transforms");
x.t("blocks","makes");
x.t("blocks","across");
x.t("breakthrough","new");
x.t("inherently","results");
x.t("exploited","efficient");
x.t("point","filter");
x.t("granularities","sequential");
x.t("granularities","corresponding");
x.t("error","detection");
x.t("needing","decode");
x.t("national","imagery");
x.t("transforms","effective");
x.t("uncompress","approximate");
x.t("uncompress","identical");
x.t("intermediate","results");
x.t("intermediate","dwt");
x.t("intermediate","tiles");
x.t("hard","disk");
x.t("disk","limits");
x.t("disk","recalled");
x.t("disk","during");
x.t("disk","writes");
x.t("disk","implementation");
x.t("disk","storage");
x.t("experts","group");
x.t("revision","original");
x.t("expensive","lossless");
x.t("resilience","jpeg");
x.t("means","whereby");
x.t("minimum","level");
x.t("media","cd-rom.this");
x.t("issues","describes");
x.t("smaller","faster");
x.t("developed","joint");
x.t("feature","jpeg");
x.t("domain","processing");
x.t("first","instance");
x.t("processing","carried");
x.t("processing","power");
x.t("processing","jpeg");
x.t("viewing","decompresed");
x.t("superior","compression");
x.t("superior","speed");
x.t("superior","image");
x.t("decoding","ecw");
x.t("decoding","therefore");
x.t("seamless","unified");
x.t("seamless","mosaics");
x.t("seamless","image");
x.t("nitf","file");
x.t("nitf","acronyn");
x.t("nitf","standard");
x.t("nitf","phone");
x.t("maximum","possible");
x.t("maximum","resolution");
x.t("fidelity","bit-error");
x.t("fidelity","quality");
x.t("fidelity","image");
x.t("fidelity","order");
x.t("better","20:1");
x.t("enough","stored");
x.t("technique","available");
x.t("technique","guaranteed");
x.t("technique","line");
x.t("technique","require");
x.t("technique","applies");
x.t("technique","effective");
x.t("technique","superior");
x.t("technique","performing");
x.t("technique","takes");
x.t("widely","used");
x.t("fastest","decode");
x.t("signal","transmission");
x.t("spatial","region");
x.t("spatial","regions");
x.t("spatial","location");
x.t("spatial","data");
x.t("viewer","examines");
x.t("viewer","randomly");
x.t("exchange","storage");
x.t("may","used");
x.t("chapter","discusses");
x.t("ecw","compression");
x.t("ecw","files");
x.t("ecw","wavelet");
x.t("ecw","compression/decompression");
x.t("ecw","uses");
x.t("ecw","jpeg2000");
x.t("ecw","speed");
x.t("ecw","file");
x.t("ecw","potential");
x.t("ecw","acronym");
x.t("ecw","faster");
x.t("ecw","provides");
x.t("ecw","makes");
x.t("ecw","tightly");
x.t("ecw","chooses");
x.t("ecw","technique");
x.t("ecw","dwt");
x.t("ecw","imagery");
x.t("ecw","employs");
x.t("ecw","enhanced");
x.t("advantage","lossless");
x.t("advantage","cpu");
x.t("advantage","lossy");
x.t("advantage","exploited");
x.t("advantage","ecw");
x.t("different","properties");
x.t("different","granularities");
x.t("different","resolutions");
x.t("different","encoding");
x.t("decompresed","ecw");
x.t("reads","uncompressed");
x.t("balancing","wizards");
x.t("processes","compressed");
x.t("almost","anywhere");
x.t("uncommon","compressed");
x.t("inverse","dwt");
x.t("offering","different");
x.t("ways","ecw");
x.t("bank","inverse");
x.t("bank","dwt");
x.t("rotation","flipping");
x.t("correction","jpeg");
x.t("extracted","lossy");
x.t("compressed","files");
x.t("compressed","topographic");
x.t("compressed","wavelet");
x.t("compressed","file");
x.t("compressed","images");
x.t("compressed","domains");
x.t("compressed","losslessly");
x.t("compressed","stream");
x.t("compressed","first");
x.t("compressed","format");
x.t("compressed","less");
x.t("compressed","code-stream");
x.t("compressed","imagery");
x.t("compressed","image");
x.t("compressed","fraction");
x.t("achieve","maximum");
x.t("achieve","acceleration");
x.t("achieve","even");
x.t("achieve","higher");
x.t("format","currently");
x.t("format","standard");
x.t("format","works");
x.t("format","erdas");
x.t("section","image");
x.t("identical","obtained");
x.t("identical","image");
x.t("identical","copy");
x.t("analyzing","uncompressed");
x.t("narrow","communication");
x.t("scan","encode");
x.t("recompression","provide");
x.t("purpose","reducing");
x.t("transmission","images");
x.t("transmission","format");
x.t("transmission","persistence");
x.t("transmission","jpeg");
x.t("transmission","real");
x.t("reconstruction","advantage");
x.t("reconstruction","compressed");
x.t("reconstruction","achieved");
x.t("employ","frequency");
x.t("correspondingly","high");
x.t("simply","decompressed");
x.t("capability","advantage");
x.t("leverages","power");
x.t("algorithms","directly");
x.t("interest","time");
x.t("interest","access");
x.t("works","container");
x.t("whole","raft");
x.t("enable","compressions");
x.t("steps","wavelet");
x.t("steps","reverse");
x.t("down-link","data");
x.t("prepare","seamless");
x.t("code","stream");
x.t("tiling","spatial");
x.t("interactions","mixing");
x.t("level","access");
x.t("level","fidelity");
x.t("level","image");
x.t("500mb","size");
x.t("cd-rom.this","chapter");
x.t("sequentially","top");
x.t("sequentially","higher");
x.t("primary","advantage");
x.t("primary","steps");
x.t("thus","restore");
x.t("restore","original");
x.t("inverse-dwt","operations");
x.t("benefits","include");
x.t("benefits","onward");
x.t("machines","guaranteed");
x.t("compress","input");
x.t("compress","ecw");
x.t("compress","emit");
x.t("consumes","heavy");
x.t("consumes","valuable");
x.t("persistence","compressed");
x.t("lower","resolution");
x.t("performing","discrete");
x.t("performing","dwt");
x.t("memory","storing");
x.t("memory","applications");
x.t("memory","using");
x.t("pending","ecw");
x.t("least","faster");
x.t("threshold","example");
x.t("(nitfs)","nitf");
x.t("vast","amount");
x.t("printed","processed");
x.t("greater","compression");
x.t("greater","uncommon");
x.t("greater","without");
x.t("carried","described");
x.t("randomly","selects");
x.t("randomly","viewer");
x.t("displayed","printed");
x.t("less","original");
x.t("less","information");
x.t("dwt","compression");
x.t("dwt","files");
x.t("dwt","filters");
x.t("dwt","filter");
x.t("dwt","quantization");
x.t("dwt","operation");
x.t("dwt","transformation");
x.t("dwt","inverse-dwt");
x.t("dwt","process");
x.t("dwt","decompression");
x.t("dwt","performed");
x.t("dwt","operations");
x.t("dwt","encoding");
x.t("architecture","requirement");
x.t("architecture","jpeg");
x.t("4.1","sdk");
x.t("(jpeg)","jpeg");
x.t("imaging","image");
x.t("imaging","applications");
x.t("amount","image");
x.t("include","hdtv");
x.t("include","multiprocessor");
x.t("latency","ecw");
x.t("latency","recursive");
x.t("orthorectification","mosaicking");
x.t("wizards","used");
x.t("broad","acceptance");
x.t("code-stream","source");
x.t("code-stream","organization");
x.t("code-stream","quality");
x.t("code-stream","jpeg");
x.t("mechanisms","detect");
x.t("mechanisms","spatial");
x.t("easier","transmission");
x.t("scheme","achieve");
x.t("efficiency","whilst");
x.t("power","multiprocessor");
x.t("power","ordinary");
x.t("power","implementations");
x.t("20:1","compression");
x.t("20:1","greater");
x.t("additional","processing");
x.t("mapper","used");
x.t("tools","orthorectification");
x.t("mosaicking","balancing");
x.t("imagery","digital");
x.t("imagery","related");
x.t("imagery","becoming");
x.t("imagery","ratios");
x.t("imagery","viewed");
x.t("imagery","faster");
x.t("imagery",".ecw");
x.t("imagery","composed");
x.t("imagery","disk");
x.t("imagery","employ");
x.t("imagery","transmission");
x.t("imagery","data");
x.t("imagery","therefore");
x.t("imagery","even");
x.t("imagery","satellites");
x.t("involves","analyzing");
x.t("dequantized","inverse");
x.t("several","reasons");
x.t("several","ways");
x.t("several","mechanisms");
x.t("measured","file");
x.t("acceleration","dual");
x.t("pipeline","technique");
x.t("implementation","architecture");
x.t("suite","standards");
x.t("satellite","imaging");
x.t("whilst","preserving");
x.t("whilst","maintaining");
x.t("process","digital");
x.t("process","ecw");
x.t("maintaining","correspondingly");
x.t("maintaining","image");
x.t("rates","available");
x.t("rates","compression");
x.t("block-based","discrete");
x.t("generate","lossless");
x.t("computer","ecw");
x.t("transmitted","decoded");
x.t("transmitted","image");
x.t("takes","advantage");
x.t("decode","entire");
x.t("decode","ecw");
x.t("decode","extract");
x.t("systems","achieve");
x.t("although","ecw");
x.t("varying","resolution");
x.t("mixing","hierarchical");
x.t("cosine","transformation");
x.t("tiles","stored");
x.t("employs","multiple");
x.t("good","ecw");
x.t("larger","therefore");
x.t("location","image");
x.t("dimensions","progressive");
x.t("sequence","according");
x.t("strong","choice");
x.t("data","obtained");
x.t("data","usually");
x.t("data","accuracy");
x.t("data","flow");
x.t("data","input");
x.t("data","fidelity");
x.t("data","identical");
x.t("data","compressed");
x.t("data","purpose");
x.t("data","algorithms");
x.t("data","consumes");
x.t("data","rates");
x.t("data","received");
x.t("data","mixed");
x.t("information","sdk");
x.t("information","achieve");
x.t("information","lower");
x.t("jpeg","uses");
x.t("jpeg","low");
x.t("jpeg","standard");
x.t("jpeg","image");
x.t("jpeg","2000");
x.t("dual","cpu");
x.t("build-up","achieved");
x.t("capabilities","seamless");
x.t("image","compression");
x.t("image","wavelet");
x.t("image","required");
x.t("image","modern");
x.t("image","obtained");
x.t("image","sub-bands");
x.t("image","multiple");
x.t("image","gone");
x.t("image","file");
x.t("image","results");
x.t("image","lossy");
x.t("image","decoded");
x.t("image","hoc");
x.t("image","undergone");
x.t("image","component");
x.t("image","scanning");
x.t("image","standard");
x.t("image","web");
x.t("image","advances");
x.t("image","quality");
x.t("image","uncompress");
x.t("image","domain");
x.t("image","fidelity");
x.t("image","viewer");
x.t("image","may");
x.t("image","extracted");
x.t("image","compressed");
x.t("image","identical");
x.t("image","simply");
x.t("image","sequentially");
x.t("image","memory");
x.t("image","code-stream");
x.t("image","data");
x.t("image","image");
x.t("image","compresses");
x.t("image","recursive");
x.t("image","decompression");
x.t("image","perfect");
x.t("image","airphoto");
x.t("image","therefore");
x.t("image","encoding");
x.t("goal","image");
x.t("defined","cpu");
x.t("mosaics","turn");
x.t("future","application");
x.t("received","transmitted");
x.t("bit","rate");
x.t("robust","error");
x.t("detection","correction");
x.t("fax","770");
x.t("compresses","down");
x.t("recursive","manner");
x.t("recursive","algorithm");
x.t("application","features");
x.t("scale","images");
x.t("reducing","size");
x.t("maps","compressed");
x.t("2:1","wavelet");
x.t("2:1","compressed");
x.t("wavelet-space","image");
x.t("above","ecw");
x.t("above","steps");
x.t("efficient","compression");
x.t("described","above");
x.t("whereby","image");
x.t("decompressed","fly");
x.t("decompressed","image");
x.t("decompressed","lesser");
x.t("cd-rom","images");
x.t("enhanced","compression");
x.t("enhanced","compressed");
x.t("fraction","original");
x.t("transmit","image");
x.t("improvement","jpeg");
x.t("requiring","robust");
x.t("subset","image");
x.t("datastore","bandwidth");
x.t("based","compression");
x.t("based","employing");
x.t("based","image");
x.t("based","encoding");
x.t("typically","color");
x.t("copy","original");
x.t("decompression","engine");
x.t("decompression","recompression");
x.t("decompression","reconstruction");
x.t("decompression","even");
x.t("practical","reality");
x.t("algorithm","lossless");
x.t("algorithm","pipeline");
x.t("emit","compressed");
x.t("applications","digital");
x.t("applications","scan");
x.t("applications","include");
x.t("applications","mapper");
x.t("applications","requiring");
x.t("applications","without");
x.t("work","flow");
x.t("mixed","dimensions");
x.t("valuable","storage");
x.t("order","achieve");
x.t("order","thus");
x.t("reverse","order");
x.t("real","time");
x.t("joint","photographic");
x.t("operate","four");
x.t("storage","transmission");
x.t("storage","efficiency");
x.t("storage","applications");
x.t("storage","bandwidth");
x.t("reconstructed","image");
x.t("used","original");
x.t("used","during");
x.t("used","almost");
x.t("used","prepare");
x.t("used","compress");
x.t("used","dwt");
x.t("used","generate");
x.t("perfect","reconstruction");
x.t("retaining","data");
x.t("turn","compressed");
x.t("percent","best");
x.t("bottom","without");
x.t("corresponding","level");
x.t("proliferation","means");
x.t("airphoto","compressed");
x.t("containing","details");
x.t("using","large");
x.t("using","opacity");
x.t("using","jpeg");
x.t("2000","example");
x.t("2000","supports");
x.t("2000","compression");
x.t("2000","substantial");
x.t("2000","international");
x.t("2000","includes");
x.t("2000","enables");
x.t("2000","provides");
x.t("2000","subsequently");
x.t("2000","standard");
x.t("2000","processes");
x.t("2000","strong");
x.t("2000","transmit");
x.t("2000","operate");
x.t("2000","delivers");
x.t("deep","provides");
x.t("codestreams","compliant");
x.t("levels","experience");
x.t("levels","maximum");
x.t("levels","containing");
x.t("approximately","2:1");
x.t("across","image");
x.t("series","sequentially");
x.t("stages","provide");
x.t("onward","benefits");
x.t("erdas","apollo");
x.t("erdas","products");
x.t("translation","rotation");
x.t("subsequent","decompression");
x.t("3400","fax");
x.t("transform","process");
x.t("without","buffering");
x.t("without","needing");
x.t("without","disk");
x.t("without","visible");
x.t("analysis","results");
x.t("performed","wavelet");
x.t("operations","patent");
x.t("operations","memory");
x.t("therefore","slower");
x.t("therefore","decoding");
x.t("therefore","ecw");
x.t("therefore","decode");
x.t("bandwidth","resources");
x.t("drives","field");
x.t("compressions","20:1");
x.t("achieved","progression");
x.t("achieved","completing");
x.t("versions","ecw");
x.t("progressive","measure");
x.t("progressive","sequential");
x.t("progressive","methods");
x.t("progressive","transmission");
x.t("progressive","image");
x.t("encode","image");
x.t("computers","compressed");
x.t("even","slower");
x.t("even","greater");
x.t("even","additional");
x.t("visible","degradation");
x.t("satellites","reduced");
x.t("delivers","substantial");
x.t("conditions","maintaining");
x.t("lesser","resolution");
x.t("resources","efficiently");
x.t("resources","need");
x.t("encoding","method");
x.t("encoding","sub-bands");
x.t("encoding","low");
x.t("encoding","enables");
x.t("encoding","effective");
x.t("encoding","techniques");
x.t("encoding","technique");
x.t("encoding","goal");
x.t("encoding","codestreams");
x.t("encoding","stages");
x.t("ratio","limit");
x.t("ratio","better");
x.t("higher","compression");
x.t("higher","resolution");
x.t("resolutions","levels");
x.t("popular","standard");
x.t("linear","unidirectional");
x.t("integrated","erdas");
x.t("server","tools");
x.t("extract","lossy");
x.t("extract","desired");
}
