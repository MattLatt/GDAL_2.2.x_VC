function FileData_Pairs(x)
{
x.t("interfaces","library");
x.t("example","uncompressed");
x.t("example","ncssetgdtpath");
x.t("example","ncsecwcompressopen");
x.t("example","ncsdetectgdtpath");
x.t("example","cncsfile::setgdtpath");
x.t("example","ncscbmreadviewlinebgra");
x.t("example","ncscbmreadviewlinergba");
x.t("example","ncsecwcompressclose");
x.t("example","ncsecwsetconfig");
x.t("example","char");
x.t("example","pclient");
x.t("example","cncsfile");
x.t("example","ncsecwcompressfreeclient");
x.t("example","//simple");
x.t("example","cncsfile::detectgdtpath");
x.t("example","cmyiostream");
x.t("example","ncssetjp2geodatausage");
x.t("example","nerror");
x.t("example","ncscbmgetviewinfo");
x.t("example","filename");
x.t("example","eerror");
x.t("example",".jpg");
x.t("example","ncscopyfileinfoex");
x.t("example","int32");
x.t("example","ncsfileviewfileinfoex");
x.t("example","ncscbmreadviewlinebgr");
x.t("example","ereadstatus");
x.t("example","flexibility");
x.t("example","ncsfileview");
x.t("ncscbmreadviewlinebil","ncsecwreadstatus");
x.t("ncscbmreadviewlinebil","pncsfileview");
x.t("ncscbmreadviewlinebil","ncsfileview");
x.t("passed","refreshupdate");
x.t("passed","store");
x.t("nlength","ncserror");
x.t("nad27","&nepsgcode");
x.t("nad27","&nepsg");
x.t("nad27","null");
x.t("nad27","returns");
x.t("clockwise","rotation");
x.t("active","band");
x.t("cancelling","compression");
x.t("overflow","especially");
x.t("pinfo","(boolean)");
x.t("pinfo","boolean");
x.t("pinfo","remarks");
x.t("pinfo","ncsfileviewfileinfoex");
x.t("pinfo","pointer");
x.t("ecompresshint","uint32");
x.t("ecompresshint","specifies");
x.t("mime","type");
x.t("looks","gdt");
x.t("complex","data");
x.t("leaves","ready");
x.t("four","bytes");
x.t("file.getepsgcode","cncsfile::getepsgcode");
x.t("proportion","blocks");
x.t("proportion","image");
x.t("cncsjpciostream","pstream");
x.t("cncsjpciostream","cncsfile::getstream");
x.t("cncsjpciostream","object");
x.t("0x0,0x1,0x2,0x3,0x4,0x5,0x6,0x7","0x8,0x9,0xa");
x.t("safely","queried");
x.t("equal","parameters");
x.t("equal","level");
x.t("equal","jp2_compress_layers");
x.t("wise","fix");
x.t("pbufferlength","int32");
x.t("pbufferlength","pointer");
x.t("debugging","work");
x.t("pfile","__file__");
x.t("procedural","uses");
x.t("library","blocking");
x.t("library","ncsecw.lib");
x.t("library","calls");
x.t("library","whenever");
x.t("library","shutdown");
x.t("library","functions");
x.t("library","function");
x.t("blocking","interface");
x.t("blocking","using");
x.t("available","time");
x.t("available","getparameter");
x.t("available","objects");
x.t("available","via");
x.t("available","sdk");
x.t("available","refresh");
x.t("available","different");
x.t("available","read/write");
x.t("available","client");
x.t("available","imagery");
x.t("available","instant");
x.t("available","application");
x.t("available","reading");
x.t("below","parameter");
x.t("below","lists");
x.t("below","details");
x.t("below","profile");
x.t("below","ncscbmclosefileview");
x.t("ncscbmsetfileview","available");
x.t("ncscbmsetfileview","ncserror");
x.t("ncscbmsetfileview","function");
x.t("ncscbmsetfileview","instead");
x.t("ncscbmsetfileview","made");
x.t("ncscbmsetfileview","pncsfileview");
x.t("ncscbmsetfileview","ncsfileview");
x.t("parameter","0.0");
x.t("parameter","usually");
x.t("parameter","desired");
x.t("parameter","name");
x.t("parameter","corresponds");
x.t("parameter","argument");
x.t("parameter","parameters");
x.t("parameter","determine");
x.t("parameter","etype");
x.t("parameter","returned");
x.t("parameter","e.g");
x.t("parameter","value");
x.t("parameter","ieee4");
x.t("notes","ncscfg_texture_dither");
x.t("notes","implemented");
x.t("notes","jp2_compress_profile_baseline_0");
x.t("notes","jp2:decompress:layer");
x.t("notes","reimplemented");
x.t("provide","status");
x.t("provide","code");
x.t("exist","error");
x.t("possible","compression");
x.t("internet","nblocksizex");
x.t("256","histogram");
x.t("256","512");
x.t("determined","automatically");
x.t("determined","according");
x.t("method","parameter");
x.t("method","allows");
x.t("method","var_args");
x.t("method","draws");
x.t("method","read");
x.t("method","called");
x.t("method","deprecated");
x.t("method","starts");
x.t("method","generally");
x.t("cncsfile::close","boolean");
x.t("cncsfile::close","ncserror");
x.t("cncsfile::convertdatasettoworld","ncserror");
x.t("cncsfile::convertdatasettoworld","int32");
x.t("cncsfile::convertworldtodataset","ncserror");
x.t("cncsfile::convertworldtodataset","int8");
x.t("else","printf");
x.t("ownscaling:max","nmax");
x.t("jp2_compress_progression_rlcp","none");
x.t("construct","specified");
x.t("construct","dataset");
x.t("version","allows");
x.t("version","sdk");
x.t("version","function");
x.t("version","takes");
x.t("version","cncsfile::refreshupdateex");
x.t("right","coordinate");
x.t("right","ndatasettlx");
x.t("right","coordinates");
x.t("right","view");
x.t("right","dataset");
x.t("right","dworldbry");
x.t("right","world");
x.t("ptellcb","callback");
x.t("ptellcb","void");
x.t("compression","library");
x.t("compression","compress_hint_internet");
x.t("compression","ecellsizeunits");
x.t("compression","related");
x.t("compression","cancelled");
x.t("compression","type");
x.t("compression","rate");
x.t("compression","printing");
x.t("compression","true");
x.t("compression","initializing");
x.t("compression","profile");
x.t("compression","sdk");
x.t("compression","compress_yuv");
x.t("compression","compress_hint_best");
x.t("compression","functions");
x.t("compression","progress");
x.t("compression","respectively");
x.t("compression","feature");
x.t("compression","ecw");
x.t("compression","format");
x.t("compression","client");
x.t("compression","task");
x.t("compression","completes");
x.t("compression","override");
x.t("compression","developer-defined");
x.t("compression","ncsecwcompressclient");
x.t("compression","event");
x.t("compression","compress_hint_fast");
x.t("compression","scheme");
x.t("compression","developer");
x.t("compression","process");
x.t("compression","information");
x.t("compression","jpeg");
x.t("compression","recursive");
x.t("compression","occurring");
x.t("compression","compress_uint8");
x.t("compression","based");
x.t("compression","returns");
x.t("compression","clean");
x.t("compression","remains");
x.t("ecw_cell_units_degrees","ecw_cell_units_feet");
x.t("rather","directly");
x.t("[ecw_max_projection_len]","boolean");
x.t("factualcompression","ieee8");
x.t("digital","format");
x.t("compress_hint_internet","default");
x.t("file.getfileinfo","ncsdetectgdtpath");
x.t("jpc:downscaling:min","uint64");
x.t("receives","scanline");
x.t("receives","length");
x.t("managing","display");
x.t("formatted","ascii");
x.t("770","776");
x.t("interactively","read");
x.t("every","line");
x.t("every","band");
x.t("every","image");
x.t("files","method");
x.t("files","ptellcb");
x.t("files","pseekcb");
x.t("files","default");
x.t("files","file");
x.t("files","preadcb");
x.t("files","machine");
x.t("files","ecw_cell_units_invalid");
x.t("files","true");
x.t("files","pclosecb");
x.t("files","ecw");
x.t("files","types");
x.t("files","release");
x.t("files","return");
x.t("files","documented");
x.t("files","created");
x.t("needs","refreshed");
x.t("needs","provided");
x.t("needs","either");
x.t("triplets","read");
x.t("ncsecw_read_ok","printf");
x.t("ncsecw_read_ok","read");
x.t("cancelled.\\n","ncscbmreadviewlinergba");
x.t("wish","used");
x.t("wish","specify");
x.t("within","compression");
x.t("within","boundary");
x.t("within","specified");
x.t("within","image");
x.t("within","classes");
x.t("ncscfg_texture_dither","boolean");
x.t("resilient","decoding");
x.t("ecellsizeunits","units");
x.t("ecellsizeunits","char");
x.t("ecellsizeunits","cell");
x.t("ecellsizeunits","ieee8");
x.t("ecw_cell_units_meters","ecw_cell_units_degrees");
x.t("ecw_cell_units_meters","default");
x.t("ecw_cell_units_meters","raw");
x.t("exported","methods");
x.t("implement","sdk\u2019s");
x.t("preferred","sample");
x.t("preferred","entry");
x.t("preferred","metadata");
x.t("full","class");
x.t("cncsjp2uuidbox","file");
x.t("cncsfile::formaterrortext","const");
x.t("cncsfile::formaterrortext","ncserror");
x.t("lists","describes");
x.t("intended","returns");
x.t("progression","order");
x.t("excepting","extension");
x.t("log_med","log_high");
x.t("ncsecw.lib","designed");
x.t("currently","open");
x.t("currently","processed");
x.t("currently","searches");
x.t("currently","value");
x.t("currently","read");
x.t("refreshed","based");
x.t("uint8","compression");
x.t("uint8","ppoutputline");
x.t("uint8","triplet");
x.t("uint8","ntypechars");
x.t("uint8","ppbuffer");
x.t("uint8","nbits");
x.t("uint8","pbuffer");
x.t("uint8","prgbtriplets");
x.t("uint8","pbgrtriplet");
x.t("uint8","prgbtriplet");
x.t("uint8","buffer");
x.t("bgra","uint32");
x.t("bgra","format");
x.t("bgra","data");
x.t("bgra","values");
x.t("rgba","uint32");
x.t("rgba","format");
x.t("rgba","data");
x.t("rgba","values");
x.t("built-in","functions");
x.t("ncompressionrate","approximate");
x.t("ncompressionrate","cellsizeunits");
x.t("static","void");
x.t("static","file");
x.t("static","char");
x.t("static","cncserror");
x.t("static","variable");
x.t("static","call");
x.t("description","strings");
x.t("description","band");
x.t("description","ncsfilebandinfo");
x.t("uncompressed","input");
x.t("uncompressed","image");
x.t("uncompressed","buffer");
x.t("create","inside");
x.t("create","ecw");
x.t("create","class");
x.t("estimate","size");
x.t("inserts","component");
x.t("ncssetgdtpath","void");
x.t("ncssetgdtpath","char");
x.t("ncssetgdtpath","c:\\\\development\\\\erm\\\\ermapper_dev\\\\gdt_data");
x.t("ncssetgdtpath","parameters");
x.t("subclasses","cncsfile::setrefreshcallback");
x.t("subclasses","input");
x.t("subclasses","release");
x.t("[4]","uint32");
x.t("table","below");
x.t("describes","parameters");
x.t("func","api");
x.t("background","color");
x.t("background","rendered");
x.t("background","fill");
x.t("build","sdk");
x.t("callback","method");
x.t("callback","interface");
x.t("callback","leave");
x.t("callback","arrives");
x.t("callback","seeking");
x.t("callback","cancel");
x.t("callback","functions");
x.t("callback","function");
x.t("callback","determining");
x.t("callback","closing");
x.t("callback","routines");
x.t("callback","using");
x.t("callback","reading");
x.t("source","file");
x.t("source","struct");
x.t("required","compression");
x.t("required","renderer\u2019s");
x.t("required","error");
x.t("required","decompress");
x.t("required","number");
x.t("required","without");
x.t("doing","compression");
x.t("doing","background");
x.t("doing","call");
x.t("green","blue");
x.t("ncsct_uint16","ppoutputline");
x.t("ncsct_uint16","ncsct_uint32");
x.t("texture","dither");
x.t("related","data");
x.t("kinds","information");
x.t("ncsecwcompressopen","pinfo");
x.t("ncsecwcompressopen","ncserror");
x.t("ncsecwcompressopen","ncsecwcompressclient");
x.t("ncsecwcompressopen","called");
x.t("pstatuscallback","void");
x.t("pstatuscallback","pcancelcallback");
x.t("pstatuscallback","optional");
x.t("pstatuscallback","struct");
x.t("key","needs");
x.t("key","key");
x.t("key","enables");
x.t("key","code");
x.t("key","generated");
x.t("keep","user");
x.t("enum","value");
x.t("ncsdetectgdtpath","void");
x.t("ncsdetectgdtpath","ncsfreefileinfoex");
x.t("ncsdetectgdtpath","remarks");
x.t("various","readline");
x.t("various","erdas");
x.t("pbox","null");
x.t("pbox","file.getbox");
x.t("pbox","remarks");
x.t("pbox","file.getuuidbox");
x.t("pbox","file.getxmlbox");
x.t("pbox","pointer");
x.t("ppfilename","[static]");
x.t("ppfilename","pointer");
x.t("detectgdtpath","remarks");
x.t("c:\\\\georeferenced.jp2","false");
x.t("instance","cncsfile");
x.t("instance","cncsfile::getparameter");
x.t("downloaded","parameters");
x.t("downloaded","cncsfile::getpercentcompletetotalblocksinview");
x.t("downloaded","cncsfile::getprojectionanddatum");
x.t("markers","default");
x.t("layer","component");
x.t("layer","resolution");
x.t("once","compression");
x.t("once","new");
x.t("once","sdk");
x.t("once","done");
x.t("cncsrenderer::writeworldfile","char");
x.t("cncsrenderer::writeworldfile","ncserror");
x.t("straight","rgb");
x.t("void","ncssetgdtpath");
x.t("void","pstatuscallback");
x.t("void","ncsdetectgdtpath");
x.t("void","detectgdtpath");
x.t("void","cncsfile::setgdtpath");
x.t("void","ppinputarray");
x.t("void","cncsfile::setclientdata");
x.t("void","ppoutputline");
x.t("void","ppclientdata");
x.t("void","ncsinitfileinfoex");
x.t("void","cncsfile::getparameter");
x.t("void","pclientdata");
x.t("void","cncsfile::setoemkey");
x.t("void","cncsrenderer::setbackgroundcolor");
x.t("void","ncssetjp2geodatausage");
x.t("void","cncsrenderer::settransparent");
x.t("void","ncsecwcompresssetoemkey");
x.t("void","cncsfile::refreshupdate");
x.t("void","pbuffer");
x.t("void","ncsfreefileinfoex");
x.t("void","ncscopyfileinfoex");
x.t("void","cncsrenderer::freejpegbuffer");
x.t("void","cncsrenderer::gettransparent");
x.t("void","cncsfile::writestatus");
x.t("void","cncsfile::setparameter");
x.t("void","pointer");
x.t("void","cncsfile::getclientdata");
x.t("void","log");
x.t("components","parameters");
x.t("components","geographic");
x.t("components","associated");
x.t("components","ncsfileviewfileinfo");
x.t("apply","texture");
x.t("apply","look");
x.t("apply","luts");
x.t("apply","instances");
x.t("ncscfg_resilient_decoding","boolean");
x.t("nmissedblocksduringread","number");
x.t("nmissedblocksduringread","ieee8");
x.t("fills","default");
x.t("optimal","block");
x.t("&szdatum","ncsinitfileinfoex");
x.t("&szdatum","cncsfile::getstream");
x.t("geographical","metadata");
x.t("performs","rectilinear");
x.t("arguments","printf");
x.t("arguments","second");
x.t("0.0","1.0");
x.t("0.0","jp2:decompress:layers");
x.t("0.0","inline");
x.t("0.0","ieee8");
x.t("don\u2019t","intersection");
x.t("responsible","doing");
x.t("descriptions","essential");
x.t("methodologies","employed");
x.t("user","interface");
x.t("user","sdk");
x.t("user","input");
x.t("user","private");
x.t("current","line");
x.t("current","ncsfileviewsetinfo");
x.t("current","file");
x.t("current","path");
x.t("current","setviewinfo");
x.t("current","transparency");
x.t("current","view");
x.t("current","image");
x.t("current","scale");
x.t("current","setview");
x.t("ecwp://","url");
x.t("cancelled","due");
x.t("cancelled","cncsfile::writelinebil");
x.t("coded","handle");
x.t("uint16","ncompressionrate");
x.t("uint16","ppoutputline");
x.t("uint16","nbands");
x.t("ncscs_srgb","ncscs_ycbcr");
x.t("referenced","within");
x.t("ppinputarray","void");
x.t("ppinputarray","parameters");
x.t("ppinputarray","array");
x.t("ppinputarray","[virtual]");
x.t("ppinputarray","remarks");
x.t("ppinputarray","bil-formatted");
x.t("derived","input");
x.t("pdst","remarks");
x.t("pdst","ncsfileviewfileinfoex");
x.t("pdst","pointer");
x.t("pdst","struct");
x.t("try","detect");
x.t("ntbox","uint32");
x.t("ntbox","cncsjp2box");
x.t("ntbox","unsigned");
x.t("file.the","alpha");
x.t("cncsfile::readlinebgra","ncsecwreadstatus");
x.t("cncsfile::readlinebgra","uint32");
x.t("cncsfile::readlinergba","ncsecwreadstatus");
x.t("cncsfile::readlinergba","uint32");
x.t("cncsfile::setgdtpath","static");
x.t("cncsfile::setgdtpath","c:\\\\development\\\\erm\\\\ermapper_dev\\\\gdt_data");
x.t("cncsfile::setgdtpath","const");
x.t("jp2_decompress_layers","uint32");
x.t("pull-through","write");
x.t("tables","rendering");
x.t("cncsrenderer::writejpeg","uint8");
x.t("cncsrenderer::writejpeg","char");
x.t("cncsrenderer::writejpeg","parameters");
x.t("cncsrenderer::writejpeg","ncserror");
x.t("container","parameters");
x.t("formatting","parameters");
x.t("uses","language");
x.t("uses","alpha");
x.t("uses","file-oriented");
x.t("until","closes");
x.t("line","every");
x.t("line","bgra");
x.t("line","rgba");
x.t("line","uncompressed");
x.t("line","current");
x.t("line","line");
x.t("line","input");
x.t("line","written");
x.t("line","abgr");
x.t("line","argb");
x.t("line","format");
x.t("line","bgr");
x.t("line","rgb");
x.t("line","steps");
x.t("line","bil");
x.t("line","read");
x.t("line","output");
x.t("program","stored");
x.t("program","upon");
x.t("program","read");
x.t("cache","default");
x.t("cache","stored");
x.t("cache","bytes");
x.t("cache","megabytes");
x.t("cache","ncscfg_use_buffered_io_stream");
x.t("cache","associated");
x.t("coordinate","[out]");
x.t("coordinate","ndatasettly");
x.t("coordinate","[in]");
x.t("coordinate","device");
x.t("coordinate","space");
x.t("coordinate","nwidth");
x.t("coordinate","match");
x.t("coordinate","topleft");
x.t("coordinate","ndatasetbrx");
x.t("coordinate","ndatasetbry");
x.t("coordinate","view");
x.t("coordinate","system");
x.t("coordinate","returns");
x.t("last","nmissedblocksduringread");
x.t("last","box");
x.t("last","xml");
x.t("last","uuid");
x.t("download","ncscbmgetviewinfo");
x.t("generating","key");
x.t("field","determined");
x.t("psrc","remarks");
x.t("psrc","struct");
x.t("locations","commonly");
x.t("ncsgetgdtpath","(void)");
x.t("ncsgetgdtpath","char");
x.t("ncsgetgdtpath","ncsgetprojectionanddatum");
x.t("pszdatum","remarks");
x.t("pszdatum","pointer");
x.t("ngeodatausage","remarks");
x.t("ngeodatausage","geodatausage");
x.t("declared","virtual");
x.t("analyzed","[out]");
x.t("remote","file");
x.t("\\r\\n","cncsfile::open");
x.t("c:\\\\foo.nitf","false");
x.t("cncsfile::setclientdata","void");
x.t("implemented","cnsrenderer");
x.t("boundary","dataset");
x.t("later","used");
x.t("776","3500");
x.t("776","3400");
x.t("working","sdk");
x.t("interface","ncurrentline");
x.t("interface","compressing");
x.t("interface","eerror");
x.t("interface","ncscbmopenfileview");
x.t("interface","application");
x.t("interface","returns");
x.t("provided","apis");
x.t("provided","sdk");
x.t("provided","solely");
x.t("provided","class");
x.t("provided","erdas");
x.t("ppoutputline","uint32");
x.t("ppoutputline","array");
x.t("ppoutputline","[virtual]");
x.t("ppoutputline","remarks");
x.t("ppoutputline","inline");
x.t("ppoutputline","pointer");
x.t("ppoutputline","ereadstatus");
x.t("ppoutputline","buffer");
x.t("necessary","constantly");
x.t("necessary","dataset");
x.t("necessary","data");
x.t("(boolean)","false");
x.t("(boolean)","true");
x.t("ppclientdata","ncserror");
x.t("pseekcb","callback");
x.t("pseekcb","void");
x.t("control\u2019s","exported");
x.t("leave","values");
x.t("calculates","optimal");
x.t("-this","image");
x.t("support","parameters");
x.t("support","several");
x.t("szmime","file.getfilemimetype");
x.t("szmime","ncsgetfilemimetype");
x.t("szmime","ncsfileview");
x.t("cncsfile::getxmlbox","cncsjp2box");
x.t("cncsfile::getxmlbox","virtual");
x.t("bprogressivedisplay","selects");
x.t("bprogressivedisplay","false");
x.t("bprogressivedisplay","boolean");
x.t("bprogressivedisplay","whether");
x.t("mode","background");
x.t("mode","callback");
x.t("mode","color");
x.t("mode","false");
x.t("mode","true");
x.t("mode","refreshupdate");
x.t("mode","parameters");
x.t("mode","input");
x.t("mode","client");
x.t("mode","returns");
x.t("state","safely");
x.t("2compliant","decoders");
x.t("jp2_compress_levels","uint32");
x.t("start-of-","packet");
x.t("extension","compression");
x.t("extension","constructed");
x.t("extension","input");
x.t("extension","filename");
x.t("extension",".jp2");
x.t("bar","application");
x.t("look","tables");
x.t("blitting","device");
x.t("altered","error");
x.t("introduction","section");
x.t("open","files");
x.t("open","close");
x.t("open","file");
x.t("open","ecw");
x.t("open","given");
x.t("open","view");
x.t("open","separate");
x.t("open","jpeg");
x.t("open","image");
x.t("open","progressive");
x.t("close","ncsfileviewsetinfo");
x.t("close","file");
x.t("close","boolean");
x.t("close","view");
x.t("close","ncsfileviewfileinfoex");
x.t("close","returns");
x.t("close","getfileinfo");
x.t("close","ncsfileviewfileinfo");
x.t("sample","type");
x.t("sample","bitdepth");
x.t("sample","values");
x.t("type","notes");
x.t("type","files");
x.t("type","currently");
x.t("type","sample");
x.t("type","open");
x.t("type","usually");
x.t("type","found");
x.t("type","file");
x.t("type","images");
x.t("type","codes");
x.t("type","string");
x.t("type","metadata");
x.t("type","underlying");
x.t("type","nbands");
x.t("type","valid");
x.t("type","output");
x.t("type","cncserror::operator");
x.t("type","jpeg");
x.t("type","jp2");
x.t("type","buffer");
x.t("obtained","call");
x.t("freed","returns");
x.t("compress_multi","(multiband)");
x.t("best","possible");
x.t("best","option");
x.t("change","manually");
x.t("older","sdk");
x.t("providing","support");
x.t("providing","information");
x.t("&nepsgcode","ncsgetgdtpath");
x.t("acquire","cncsrenderer::applyluts");
x.t("acquire","cncsfile::addbox");
x.t("jp2_compress_include_eph","boolean");
x.t("cncsfile::writereadline","uint32");
x.t("cncsfile::writereadline","cncserror");
x.t("times","gui");
x.t("histogram","calculations");
x.t("histogram","histogram");
x.t("histogram","array");
x.t("histogram","[256]");
x.t("histogram","calculated");
x.t("histogram","returns");
x.t("calculations","during");
x.t("calculations","returns");
x.t("cncserror::cncserror","const");
x.t("reset","whenever");
x.t("response","user");
x.t("response","cancel");
x.t("calls","back");
x.t("calls","thread");
x.t("calls","developer-defined");
x.t("time","parameters");
x.t("time","scanline");
x.t("time","view");
x.t("time","draw");
x.t("time","call");
x.t("ncsfileviewsetinfo","cncsfile::getfileviewsetinfo");
x.t("ncsfileviewsetinfo","typedef");
x.t("ncsfileviewsetinfo","ppncsfileviewsetinfo");
x.t("ncsfileviewsetinfo","pviewsetinfo");
x.t("ncsfileviewsetinfo","remarks");
x.t("ncsfileviewsetinfo","structure");
x.t("ncsfileviewsetinfo","ncsfileviewfileinfo");
x.t("ncsecwreadstatus","ncscbmreadviewlinebil");
x.t("ncsecwreadstatus","ncsecw_read_ok");
x.t("ncsecwreadstatus","cncsfile::readlinebgra");
x.t("ncsecwreadstatus","cncsfile::readlinergba");
x.t("ncsecwreadstatus","ncscbmreadviewlinebgra");
x.t("ncsecwreadstatus","ncscbmreadviewlinergba");
x.t("ncsecwreadstatus","ncscbmreadviewlinebilex");
x.t("ncsecwreadstatus","cncsrenderer::readlinebgr");
x.t("ncsecwreadstatus","cncsrenderer::readlinergb");
x.t("ncsecwreadstatus","cncsrenderer::readlinebil");
x.t("ncsecwreadstatus","cncsfile::readlineabgr");
x.t("ncsecwreadstatus","cncsfile::readlineargb");
x.t("ncsecwreadstatus","cncsfile::readlinebgr");
x.t("ncsecwreadstatus","cncsfile::readlinergb");
x.t("ncsecwreadstatus","read");
x.t("ncsecwreadstatus","cncsfile::readlinebil");
x.t("ncsecwreadstatus","prefreshcallback");
x.t("ncsecwreadstatus","pcallback");
x.t("ncsecwreadstatus","cncsfile::refreshupdateex");
x.t("ncsecwreadstatus","ncscbmreadviewlinebgr");
x.t("ncsecwreadstatus","ncscbmreadviewlinergb");
x.t("left","coordinate");
x.t("left","dworldtly");
x.t("left","cell");
x.t("left","view");
x.t("left","dataset");
x.t("left","dworldbrx");
x.t("left","bottom");
x.t("left","world");
x.t("numbering","starts");
x.t("buffered","jpeg");
x.t("decompressing","data");
x.t("datum","name");
x.t("datum","strings");
x.t("datum","string");
x.t("datum","band");
x.t("datum","mapper");
x.t("ncsct_uint32","ncsct_uint64");
x.t("ncsct_int64","ncsct_ieee4");
x.t("pcancelcallback","boolean");
x.t("pcancelcallback","pointers");
x.t("pcancelcallback","optional");
x.t("pcancelcallback","struct");
x.t("mandatory","callback");
x.t("mandatory","pstatuscallback");
x.t("mandatory","unless");
x.t("mandatory","developer-created");
x.t("compresshint","ecompresshint");
x.t("mappings","may");
x.t("ensuring","validity");
x.t("cncsfile::getfile","remarks");
x.t("cncsfile::getfile","class");
x.t("cncsfile::getgdtpath","static");
x.t("cncsfile::getgdtpath","remarks");
x.t("cncsfile::getgdtpath","cncsfile::getncsfileview");
x.t("fvalue","remarks");
x.t("jp2_compress_include_sop","boolean");
x.t("public","members");
x.t("initially","system");
x.t("jpeg2000","compression");
x.t("jpeg2000","sdk");
x.t("jpeg2000","decompression");
x.t("whenever","new");
x.t("whenever","view");
x.t("whenever","appropriate");
x.t("regardless","source");
x.t("regardless","characteristics");
x.t("ncscbmclosefileviewex","ncserror");
x.t("ncscbmclosefileviewex","ncsfileview");
x.t("bfreecachedfile","file");
x.t("bfreecachedfile","true");
x.t("bfreecachedfile","remarks");
x.t("bfreecachedfile","behaves");
x.t("multiple","setfileviews");
x.t("multiple","views");
x.t("rate","compression");
x.t("rate","usually");
x.t("rate","may");
x.t("rate","actually");
x.t("rate","sought");
x.t("down","analyzed");
x.t("down","url");
x.t("down","cellsizeunits");
x.t("ncscs_greyscale","ncscs_yuv");
x.t("total","proportion");
x.t("total","blocks");
x.t("total","number");
x.t("formats","designed");
x.t("inside","control");
x.t("inside","atl");
x.t("bcalculatesizesonly","true");
x.t("bcalculatesizesonly","remarks");
x.t("releases","associated");
x.t("releases","resources");
x.t("however","architecture");
x.t("however","used");
x.t("(pview)","ncscbmgetfiletype");
x.t("(pview)","ncscopyfileinfoex");
x.t("unknown","parameters");
x.t("nepsgcode","[static]");
x.t("nepsgcode","char");
x.t("nepsgcode","reference");
x.t("nepsgcode","ncsgetepsgcode");
x.t("[out]","ppfilename");
x.t("[out]","nepsgcode");
x.t("[out]","pndatasetx");
x.t("[out]","pndatasety");
x.t("[out]","pphost");
x.t("[out]","ppprotocol");
x.t("[out]","pdworldx");
x.t("[out]","pdworldy");
x.t("[out]","ppdatum");
x.t("[out]","ppprojection");
x.t("form","url");
x.t("uint31","none");
x.t("pstream","file.getstream");
x.t("pstream","input");
x.t("pstream","bool");
x.t("(uuid)","cncsfile::getxmlbox");
x.t("parsing","input");
x.t("jp2_compress_profile_baseline_0","none");
x.t("arrives","network");
x.t("__line__","cncslog::ncsloglevel");
x.t("apis","further");
x.t("apis","accessing");
x.t("back","application");
x.t("ncscbmreadviewlinebgra","ncsecwreadstatus");
x.t("ncscbmreadviewlinebgra","pncsfileview");
x.t("ncscbmreadviewlinebgra","ncsfileview");
x.t("uint32","nlength");
x.t("uint32","pbufferlength");
x.t("uint32","nmissedblocksduringread");
x.t("uint32","ntbox");
x.t("uint32","ppoutputline");
x.t("uint32","histogram");
x.t("uint32","nepsgcode");
x.t("uint32","pbandlist");
x.t("uint32","default");
x.t("uint32","ndatasettlx");
x.t("uint32","ndatasettly");
x.t("uint32","profiletype");
x.t("uint32","pabgr");
x.t("uint32","pargb");
x.t("uint32","ncurrentline");
x.t("uint32","none");
x.t("uint32","ntypechars");
x.t("uint32","target");
x.t("uint32","sets");
x.t("uint32","nblocksizex");
x.t("uint32","nblocksizey");
x.t("uint32","retrieves");
x.t("uint32","ntlx");
x.t("uint32","ntly");
x.t("uint32","noutputbands");
x.t("uint32","ninoutsizex");
x.t("uint32","ninoutsizey");
x.t("uint32","control");
x.t("uint32","nwidth");
x.t("uint32","nnextline");
x.t("uint32","format");
x.t("uint32","nsizex");
x.t("uint32","nbands");
x.t("uint32","nsizey");
x.t("uint32","nheight");
x.t("uint32","ndatasetbrx");
x.t("uint32","nblocksavailable");
x.t("uint32","ndatasetbry");
x.t("uint32","ninputbands");
x.t("uint32","prgba");
x.t("uint32","pbgra");
x.t("uint32","nblocksinview");
x.t("uint32","nbrx");
x.t("uint32","nbry");
x.t("uint32","nblocksavailableatsetview");
x.t("uint32","buffer");
x.t("uint32","plinesteps");
x.t("ncscbmreadviewlinergba","ncsecwreadstatus");
x.t("ncscbmreadviewlinergba","pncsfileview");
x.t("ncscbmreadviewlinergba","ncsfileview");
x.t("pbandlist","wish");
x.t("pbandlist","uint32");
x.t("pbandlist","array");
x.t("pbandlist","ntlx");
x.t("pbandlist","index");
x.t("pbandlist","read");
x.t("pbandlist","int32");
x.t("default","progression");
x.t("default","background");
x.t("default","0.0");
x.t("default","behaviour");
x.t("default","optimize");
x.t("default","false");
x.t("default","true");
x.t("default","ram");
x.t("default","constructor");
x.t("default","jp2_compress_precinct_width");
x.t("default","destructor");
x.t("default","value");
x.t("default","decode");
x.t("default","output");
x.t("default","larger");
x.t("default","image");
x.t("default","values");
x.t("default","users");
x.t("default","setting");
x.t("default","calculated");
x.t("requirement","able");
x.t("pixels","dworldtlx");
x.t("pixels","number");
x.t("pixels","nheight");
x.t("pixels","nblocksinview");
x.t("ncsct_int8","ncsct_int16");
x.t("automatically","specified");
x.t("automatically","created");
x.t("compressformat","ecompressformat");
x.t("detect","gdt");
x.t("text","returned");
x.t("getparameter","method");
x.t("convert","epsg");
x.t("jp2_compress_profile_baseline_1","none");
x.t("height","specified");
x.t("height","match");
x.t("height","view");
x.t("height","draw");
x.t("height","returns");
x.t("behaviour","decompress");
x.t("cncsrenderer::readimage","ncsfileviewsetinfo");
x.t("cncsrenderer::readimage","ncserror");
x.t("cncsrenderer::readimage","int32");
x.t("cncsrenderer::readimage","ieee8");
x.t("drawimage","time");
x.t("drawimage","draw");
x.t("wraps","ncserror");
x.t("objects","equal");
x.t("objects","provided");
x.t("objects","parameters");
x.t("objects","three");
x.t("objects","error");
x.t("objects","share");
x.t("objects","throughout");
x.t("new","compression");
x.t("new","input");
x.t("new","cncserror");
x.t("new","xml");
x.t("new","ncsecwcompressclient");
x.t("new","value");
x.t("new","data");
x.t("new","image");
x.t("new","setview");
x.t("single","compression");
x.t("single","instance");
x.t("single","file");
x.t("single","band");
x.t("details","api");
x.t("details","parameters");
x.t("details","ncsfilebandinfo");
x.t("details","view");
x.t("details","bit");
x.t("developer\u2019s","application");
x.t("want","determine");
x.t("want","sdk");
x.t("supplied","developer");
x.t("items","specified");
x.t("ncs_file_jp2","ncs_file_ecw");
x.t("ncs_file_jp2","ncs_file_unknown");
x.t("contents","ncsfileviewfileinfoex");
x.t("precedence","metadata");
x.t("precedence","georeferencing");
x.t("access","create");
x.t("access","point");
x.t("file.getstream","cncsfile::getuuidbox");
x.t("jp2_compress_profile_baseline_2","none");
x.t("cncsrenderer::calchistograms","boolean");
x.t("cncsrenderer::calchistograms","parameters");
x.t("fall","umbrellas");
x.t("designed","simplicity");
x.t("printf","open");
x.t("printf","new");
x.t("printf","status");
x.t("printf","error");
x.t("printf","read");
x.t("printf","style");
x.t("printf","associated");
x.t("top","right");
x.t("top","left");
x.t("size","256");
x.t("size","down");
x.t("size","pixels");
x.t("size","raster");
x.t("size","units");
x.t("size","local");
x.t("size","nblocksizex");
x.t("size","input");
x.t("size","cell");
x.t("size","number");
x.t("size","(bytes)");
x.t("size","jp2_compress_tile_width");
x.t("size","jp2_compress_precinct_height");
x.t("size","view");
x.t("size","output");
x.t("size","dataset");
x.t("size","internally");
x.t("size","following");
x.t("size","per");
x.t("size","across");
x.t("block","size");
x.t("embedding","ecw");
x.t("color","initially");
x.t("color","display");
x.t("color","space");
x.t("color","drawn");
x.t("color","cncsrenderer::settransparent");
x.t("color","non-transparent");
x.t("color","cncsrenderer");
x.t("sized","stack");
x.t("(void)","[virtual]");
x.t("(void)","remarks");
x.t("license","key");
x.t("fcompressionseconds","ieee8");
x.t("usually","compressing");
x.t("usually","boolean");
x.t("usually","string");
x.t("usually","larger");
x.t("compress_none","compression");
x.t("4326","&szprojection");
x.t("translating","epsg");
x.t("geocoding","information");
x.t("includes","complex");
x.t("queried","overridden");
x.t("compliant","decoders");
x.t("cncsfile::setrefreshcallback","ncsecwreadstatus");
x.t("cncsfile::setrefreshcallback","cncserror");
x.t("printing","standard");
x.t("interleaved","line");
x.t("file","example");
x.t("file","cncsfile::close");
x.t("file","compression");
x.t("file","version");
x.t("file","ncompressionrate");
x.t("file","required");
x.t("file","later");
x.t("file","bprogressivedisplay");
x.t("file","ncsfileviewsetinfo");
x.t("file","formats");
x.t("file","parsing");
x.t("file","details");
x.t("file","size");
x.t("file","short");
x.t("file","info");
x.t("file","during");
x.t("file","x-image/ecw");
x.t("file","image/jp2");
x.t("file","via");
x.t("file","specified");
x.t("file","name");
x.t("file","closed");
x.t("file","corresponds");
x.t("file","bytes");
x.t("file","cncsfile");
x.t("file","logging");
x.t("file","parameters");
x.t("file",".open");
x.t("file","natural");
x.t("file","string");
x.t("file","input");
x.t("file","functions");
x.t("file","band");
x.t("file","non-progressive");
x.t("file","sizes");
x.t("file","oriented");
x.t("file","first");
x.t("file","written");
x.t("file","may");
x.t("file","ecw");
x.t("file","closes");
x.t("file","release");
x.t("file","format");
x.t("file","compressed");
x.t("file","alpha");
x.t("file","file.open");
x.t("file","override");
x.t("file","database");
x.t("file","e.g");
x.t("file","closing");
x.t("file","view");
x.t("file","actually");
x.t("file","cnsjp2fileview");
x.t("file","opening");
x.t("file","output");
x.t("file","information");
x.t("file","jpeg");
x.t("file","unc");
x.t("file","opened");
x.t("file","based");
x.t("file","plast");
x.t("file","pointer");
x.t("file","either");
x.t("file","used");
x.t("file","following");
x.t("file","containing");
x.t("file","i/o");
x.t("file","returns");
x.t("file","associated");
x.t("file","passing");
x.t("file","reading");
x.t("file","extents");
x.t("file","remains");
x.t("file","generally");
x.t("file","uuid");
x.t("file","object");
x.t("ncs_success","printf");
x.t("ncs_success","operation");
x.t("ncs_success","char");
x.t("&pmyview-","pfileinfo");
x.t("&pmyview-","pncsfileview");
x.t("&pmyview-","pviewinfo");
x.t("pfileinfo","nerror");
x.t("status","compression");
x.t("status","callback");
x.t("status","cancellation");
x.t("status","cancel");
x.t("status","renderer");
x.t("status","code");
x.t("status","information");
x.t("status","returns");
x.t("need","exact");
x.t("able","request");
x.t("ncscs_ycbcr","ecelltype");
x.t("short","ascii");
x.t("list","amount");
x.t("designated","ncurrentline");
x.t("designated","nnextline");
x.t("advised","rate");
x.t("ncscbmgetfilemimetype","char");
x.t("ncscbmgetfilemimetype","ncsfileview");
x.t("info","compression");
x.t("info","initfileinfoex");
x.t("info","used");
x.t("cncsjp2box","pbox");
x.t("cncsjp2box","cncsfile::getxmlbox");
x.t("cncsjp2box","&box");
x.t("cncsjp2box","cncsfile::getuuidbox");
x.t("cncsjp2box","cncsfile::getbox");
x.t("cncsjp2box","plast");
x.t("[static]","remarks");
x.t("pndatasetx","int32");
x.t("pndatasetx","buffer");
x.t("found","example");
x.t("found","\\r\\n");
x.t("found","file");
x.t("found","applicable");
x.t("appropriately","typed");
x.t("appropriately","imagery");
x.t("jp2:compliance:profile:type","profiletype");
x.t("jp2:compliance:profile:type","&profiletype");
x.t("triplet","format");
x.t("ndatasettlx","uint32");
x.t("ndatasettlx","top");
x.t("ndatasettlx","dataset");
x.t("ndatasettlx","int32");
x.t("initialization","parameters");
x.t("benefit","programming");
x.t("ncscbmreadviewlinebilex","ncsecwreadstatus");
x.t("ncscbmreadviewlinebilex","pncsfileview");
x.t("ncscbmreadviewlinebilex","ncsfileview");
x.t("during","compression");
x.t("during","processing");
x.t("during","view");
x.t("during","call");
x.t("raster","cell");
x.t("raster","cells");
x.t("ncscfg_jp2_fileio_cache_maxmem","uint32");
x.t("ncscfg_ecwp_cache_size_mb","int32");
x.t("ncscfg_jp2_autogen_j2i","boolean");
x.t("preadcb","callback");
x.t("preadcb","void");
x.t("corner","top");
x.t("//members","ncsfileviewfileinfo");
x.t("ncscs_multiband","ncscs_srgb");
x.t("ncsecwcompressclose","ncserror");
x.t("ncsecwcompressclose","(pclient)");
x.t("ncsecwcompressclose","ncsecwcompressclient");
x.t("ncsecwcompressclose","ieee4");
x.t("ncsecwcompressclose","called");
x.t("cancellation","callback");
x.t("ninputsize","size");
x.t("ninputsize","ieee8");
x.t("optimize","internet");
x.t("machine","currently");
x.t("(pinfo)","ncsfreefileinfoex");
x.t("(pinfo)","ncsgetepsgcode");
x.t("group","(epsg)");
x.t("group","projected");
x.t("add","header");
x.t("pndatasety","remarks");
x.t("pndatasety","buffer");
x.t("complete","value");
x.t("ndatasettly","uint32");
x.t("ndatasettly","top");
x.t("ndatasettly","dataset");
x.t("ndatasettly","int32");
x.t("rendered","image");
x.t("single-layered","control");
x.t("assignment","operator");
x.t("api","provide");
x.t("api","compression");
x.t("api","support");
x.t("api","api");
x.t("api","become");
x.t("api","cncsfile");
x.t("api","sdk");
x.t("api","addition");
x.t("api","streamline");
x.t("api","reference");
x.t("api","return");
x.t("api","read");
x.t("api","although");
x.t("api","utility");
x.t("api","structure");
x.t("api","decompression");
x.t("api","call");
x.t("due","error");
x.t("due","application");
x.t("bits","bits");
x.t("bits","red");
x.t("pixel","ncsct_uint8");
x.t("pixel","value");
x.t("pixel","data");
x.t("fbrx","fbry");
x.t("fbrx","ieee8");
x.t("fbrx","bottom");
x.t("nearest","neighbour");
x.t("foriginx","foriginy");
x.t("foriginx","ieee8");
x.t("foriginx","world");
x.t("ecw_cell_units_invalid","ecw_cell_units_meters");
x.t("according","table");
x.t("according","extension");
x.t("according","nitf/biif");
x.t("according","purpose");
x.t("images","ecw_cell_units_degrees");
x.t("images","principal");
x.t("images","e.g");
x.t("images","yuv");
x.t("images","bit");
x.t("images","problem");
x.t("unless","input");
x.t("compress_rgb","rgb");
x.t("x-image/ecw","file");
x.t("image/jp2","parameters");
x.t("entry","point");
x.t("cncsfile::cncsfile","remarks");
x.t("normally","box");
x.t("pphost","char");
x.t("pphost","pointer");
x.t("meaningful","error");
x.t("file.getfile","cncsfile::getfileinfo");
x.t("0x8,0x9,0xa","0xb");
x.t("end-of-","packetheader");
x.t("cncsfile::write","cncserror");
x.t("cncsfile::write","[virtual]");
x.t("check","progress");
x.t("testing","ncurrentline");
x.t("simple","setextents");
x.t("transparent","opaque");
x.t("network","internal");
x.t("network","client");
x.t("logged","values");
x.t("cncserror::operator=","cncserror");
x.t("referred","using");
x.t("false","cncsjpciostream");
x.t("false","uint8");
x.t("false","ncscfg_resilient_decoding");
x.t("false","jp2_compress_include_eph");
x.t("false","bfreecachedfile");
x.t("false","cncsrenderer::calchistograms");
x.t("false","cncsjp2box");
x.t("false","ncscfg_jp2_fileio_cache_maxmem");
x.t("false","ncscfg_ecwp_cache_size_mb");
x.t("false","false");
x.t("false","true");
x.t("false","cncsjp2file");
x.t("false","cncsfile");
x.t("false","slower");
x.t("false","continue");
x.t("false","error");
x.t("false","ncscfg_cache_maxmem");
x.t("false","ncsecwcompress");
x.t("false","cncsrenderer::gettransparent");
x.t("false","remarks");
x.t("false","int32");
x.t("false","application");
x.t("false","cncsfile::open");
x.t("false","setview");
x.t("false","cncsrenderer::drawimage");
x.t("false","file.getfiletype");
x.t("false","ncsfileview");
x.t("false","ncsuuid");
x.t("url","remote");
x.t("url","string");
x.t("url","broken");
x.t("url","decomposition");
x.t("url","ncsfileview");
x.t("32bits","bits");
x.t("fbry","ncsfileviewsetinfo");
x.t("fbry","want");
x.t("fbry","ncsecwsetconfig");
x.t("fbry","remarks");
x.t("fbry","bottom");
x.t("possibility","passing");
x.t("ncsecwconfigtype","etype");
x.t("file/connection","default");
x.t("foriginy","char");
x.t("foriginy","cellsizeunits");
x.t("foriginy","world");
x.t("units","foriginx");
x.t("units","ecw_cell_units_invalid");
x.t("units","used");
x.t("large","compression");
x.t("large","images");
x.t("large","stack");
x.t("large","number");
x.t("duplicate","dynamically");
x.t("configuring","compressing");
x.t("become","available");
x.t("become","preferred");
x.t("[in]","bprogressivedisplay");
x.t("[in]","szdatum");
x.t("[in]","epsgcode");
x.t("[in]","ndatasetx");
x.t("[in]","ndatasety");
x.t("[in]","bwrite");
x.t("[in]","purlpath");
x.t("[in]","dworldx");
x.t("[in]","nerrornum");
x.t("[in]","dworldy");
x.t("[in]","szprojection");
x.t("[in]","bfreecache");
x.t("iee8","dworldy");
x.t("&nepsg","nepsg");
x.t("profiletype","cncsfileview");
x.t("profiletype","parameters");
x.t("selects","whether");
x.t("constantly","perform");
x.t("essential","functions");
x.t("writing","applications");
x.t("true","compression");
x.t("true","estimate");
x.t("true","response");
x.t("true","bfreecachedfile");
x.t("true","false");
x.t("true","faster");
x.t("true","ncsinitfileinfoex");
x.t("true","cancel");
x.t("true","sdk");
x.t("true","jpc:downscaling:max");
x.t("true","reduce");
x.t("true","jpc:downscaling:enabled");
x.t("true","ncscfg_force_file_reopen");
x.t("true","ncscfg_optimize_use_nearest_neighbou");
x.t("true","force");
x.t("true","cmymetadatabox");
x.t("true","remarks");
x.t("true","successful");
x.t("true","two");
x.t("true","returns");
x.t("true","ncsecwsetiocallbacks");
x.t("true","object");
x.t("via","api");
x.t("via","sdk");
x.t("via","call");
x.t("processed","parameters");
x.t("processed","second");
x.t("processed","extents");
x.t("region","interface");
x.t("desired","color");
x.t("desired","quality");
x.t("desired","jp2_geodata_usage");
x.t("desired","value");
x.t("ram","2gb");
x.t("specified","type");
x.t("specified","default");
x.t("specified","ninputsize");
x.t("specified","input");
x.t("specified","number");
x.t("specified","filename");
x.t("specified","fcellincrementx");
x.t("specified","folder");
x.t("specified","setfileinfo");
x.t("specified","ftargetcompression");
x.t("specified","elevel");
x.t("specified","dataset");
x.t("specified","jpeg");
x.t("specified","application");
x.t("specified","call");
x.t("specified","world");
x.t("specified","extents");
x.t("handle","new");
x.t("handle","64-bit");
x.t("pbands","ncsfileviewfileinfoex");
x.t("pbands","pointer");
x.t("ncsct_int16","ncsct_int32");
x.t("requires","large");
x.t("directly","control\u2019s");
x.t("requirements","boolean");
x.t("requirements","process");
x.t("requirements","including");
x.t("[ecw_max_datum_len}","char");
x.t("jp2h","uuid");
x.t("(ntbox)","cncsfile::getclientdata");
x.t("(epsg)","code");
x.t("pabgr","inline");
x.t("pabgr","pointer");
x.t("pargb","inline");
x.t("pargb","pointer");
x.t("byte","buffer");
x.t("jp2_compress_profile_nitf_biif_ep","none");
x.t("precinct","jp2_compress_progression_rlcp");
x.t("precinct","progression");
x.t("decoded","jp2_geodata_usage");
x.t("colorref","nbackgroundcolor");
x.t("__file__","int");
x.t("3500","info@erdas.com");
x.t("operation","succeeds");
x.t("obtain","location");
x.t("obtain","information");
x.t("obtain","descriptive");
x.t("name","needs");
x.t("name","derived");
x.t("name","file");
x.t("name","specified");
x.t("name","resultant");
x.t("name","string");
x.t("name","input");
x.t("name","image");
x.t("name","szoutputfilename");
x.t("name","company");
x.t("showviewcallback","ncscbmreadviewlinebgr");
x.t("ncsecwsetconfig","ncsecwconfigtype");
x.t("ncsecwsetconfig","ncserror");
x.t("ncsecwsetconfig","ncscfg_force_file_reopen");
x.t("stored","string");
x.t("stored","data");
x.t("faster","less");
x.t("noffset","ncserror");
x.t("ncscs_yuv","ncscs_multiband");
x.t("szcompanyname","name");
x.t("szcompanyname","char");
x.t("ncurrentline","parameter");
x.t("ncurrentline","current");
x.t("ncurrentline","argument");
x.t("ncurrentline","boolean");
x.t("ncurrentline","relative");
x.t("ncurrentline","number");
x.t("ncurrentline","[virtual]");
x.t("ncurrentline","remarks");
x.t("path","file");
x.t("path","accordingly");
x.t("path","gdt");
x.t("range","noutputbands");
x.t("range","downscaling");
x.t("common","tasks");
x.t("ncsinitfileinfoex","void");
x.t("ncsinitfileinfoex","(pinfo)");
x.t("ncsinitfileinfoex","ncsfileviewfileinfoex");
x.t("initfileinfoex","&info");
x.t("box","type");
x.t("box","open");
x.t("box","found");
x.t("box","specified");
x.t("box","written");
x.t("box","geotiff");
x.t("box","file.addbox");
x.t("box","output");
x.t("box","subclass");
x.t("box","world");
x.t("functionality","provided");
x.t("functionality","made");
x.t("functionality","using");
x.t("resulting","form");
x.t("resulting","url");
x.t("resulting","output");
x.t("pfilename","ascii");
x.t("pfilename","filename");
x.t("pfilename","remarks");
x.t("pfilename","int32");
x.t("pformat","null");
x.t("pformat","optional");
x.t("exactly","ncscbmclosefileview");
x.t("closed","single");
x.t("char","pfile");
x.t("char","cncsfile::formaterrortext");
x.t("char","ppfilename");
x.t("char","ncsgetgdtpath");
x.t("char","pszdatum");
x.t("char","szmime");
x.t("char","cncsfile::getgdtpath");
x.t("char","ncscbmgetfilemimetype");
x.t("char","pphost");
x.t("char","szcompanyname");
x.t("char","pfilename");
x.t("char","pformat");
x.t("char","ppprotocol");
x.t("char","szdatum");
x.t("char","sname");
x.t("char","szkey");
x.t("char","pszprojection");
x.t("char","local");
x.t("char","szfilename");
x.t("char","szpath");
x.t("char","purlpath");
x.t("char","szprojection");
x.t("char","ppdatum");
x.t("char","null");
x.t("char","szinputfilename");
x.t("char","explanatory");
x.t("char","cncsfile::getfilemimetype");
x.t("char","szoutputfilename");
x.t("char","ppprojection");
x.t("char","szdesc");
x.t("char","cncserror::geterrormessage");
x.t("char","szurlpath");
x.t("char","ptext");
x.t("enables","compression");
x.t("enables","resilient");
x.t("enables","automatic");
x.t("enables","downscaling");
x.t("seeking","files");
x.t("approximate","compression");
x.t("compressing","large");
x.t("compressing","ecw");
x.t("compressing","output");
x.t("compressing","data");
x.t("compressing","jpeg");
x.t("compressing","image");
x.t("cancel","compression");
x.t("cancel","callback");
x.t("cancel","callbacks");
x.t("populated","according");
x.t("initialize","new");
x.t("codes","follows");
x.t("codes","projection");
x.t("codes","mapper");
x.t("follows","compress_none");
x.t("follows","compress_hint_none");
x.t("2048","nblocksizey");
x.t("tasks","background");
x.t("tasks","ncscbmgetfilemimetype");
x.t("tasks","destructor");
x.t("&info","file.getfileinfo");
x.t("&info","ncssetgdtpath");
x.t("&info","inline");
x.t("survey","group");
x.t("searches","custom");
x.t("c:\\\\development\\\\erm\\\\ermapper_dev\\\\gdt_data","cncsfile::setoemkey");
x.t("c:\\\\development\\\\erm\\\\ermapper_dev\\\\gdt_data","ncssetjp2geodatausage");
x.t("cncsjp2fileview","cncsfile::setclientdata");
x.t("cncsjp2fileview","parent");
x.t("constructor","cncserror::cncserror");
x.t("constructor","cncsfile::cncsfile");
x.t("constructor","large");
x.t("constructor","initializes");
x.t("constructor","cncsrenderer::cncsrenderer");
x.t("overridden","version");
x.t("overridden","subclasses");
x.t("ppprotocol","char");
x.t("ppprotocol","pointer");
x.t("conversion","dataset");
x.t("conversion","world");
x.t("corresponds","static");
x.t("corresponds","according");
x.t("corresponds","given");
x.t("typed","variable");
x.t("cncsfileview","view.getparameter");
x.t("cncsfileview","view.setparameter");
x.t("view.getparameter","jp2:compliance:profile:type");
x.t("jp2:decompress:layer","uint32");
x.t("cncsfile::setview","ncserror");
x.t("cncsfile::setview","cncserror");
x.t("cncsfile::setview","int32");
x.t("ddatasettlx","top");
x.t("ddatasettlx","int32");
x.t("performance","may");
x.t("changed","parent");
x.t("lprect","pcliprect");
x.t("previously","specified");
x.t("previously","returned");
x.t("refreshupdate","callback");
x.t("refreshupdate","function");
x.t("constructed","first");
x.t("nline","__line__");
x.t("ncsgeterrortext","(nerror)");
x.t("e\\n","ereadstatus");
x.t("part","image");
x.t("argument","type");
x.t("argument","appropriately");
x.t("argument","provides");
x.t("argument","parameters");
x.t("argument","address");
x.t("argument","reads");
x.t("bytes","field");
x.t("bytes","default");
x.t("bytes","mnemonic");
x.t("//additional","data");
x.t("degrees","ecolorspace");
x.t("component","pixel");
x.t("component","precinct");
x.t("component","values");
x.t("cover","view");
x.t("pclient","void");
x.t("pclient","uint32");
x.t("pclient","ncsecwcompressallocclient");
x.t("pclient","remarks");
x.t("pclient","pointer");
x.t("initializing","process");
x.t("ptask","//these");
x.t("perform","best");
x.t("perform","histogram");
x.t("perform","comparatively");
x.t("perform","fastest");
x.t("accordingly","looks");
x.t("accordingly","transparent");
x.t("european","petroleum");
x.t("custom","epsg");
x.t("preference","reading");
x.t("enumeration","value");
x.t("cncsfile","subclasses");
x.t("cncsfile","declared");
x.t("cncsfile","file");
x.t("cncsfile","overridden");
x.t("cncsfile","cncsfile");
x.t("cncsfile","[virtual]");
x.t("cncsfile","inherits");
x.t("cncsfile","documented");
x.t("cncsfile","cncsrenderer");
x.t("cncsfile","class");
x.t("cncsfile","overrides");
x.t("cncsfile","object");
x.t("virtual","callback");
x.t("virtual","void");
x.t("virtual","ncsecwreadstatus");
x.t("virtual","cncsjp2box");
x.t("virtual","overridden");
x.t("virtual","cncsfile");
x.t("virtual","cncserror");
x.t("virtual","remarks");
x.t("virtual","cncsrenderer");
x.t("c:\\\\foo.jp2","false");
x.t("const","ncsfileviewsetinfo");
x.t("const","char");
x.t("const","ncserror");
x.t("const","cncserror");
x.t("const","int32");
x.t("const","ncsfileviewfileinfoex");
x.t("cncsjp2file","cncsfile::getfile");
x.t("cncsjp2file","pjp2file");
x.t("cncsjp2file","object");
x.t("setviewinfo","cncsfile::getgdtpath");
x.t("setviewinfo","containing");
x.t("cncsfile::setfileinfo","cncserror");
x.t("cncsfile::setfileinfo","ncsfileviewfileinfoex");
x.t("ddatasettly","top");
x.t("ddatasettly","int32");
x.t("regions","accordingly");
x.t("fill","drawing");
x.t("renderer\u2019s","container");
x.t("transparently","returns");
x.t("base","output");
x.t("logging","level");
x.t("cncserror::operator==","const");
x.t("cncserror::operator==","bool");
x.t("comparison","returns");
x.t("methods","cncsfile");
x.t("methods","refresh-updateex");
x.t("methods","ncsecwcompressallocclient");
x.t("methods","data");
x.t("methods","application");
x.t("methods","class");
x.t("further","utility");
x.t("parameters","below");
x.t("parameters","available");
x.t("parameters","within");
x.t("parameters","pbox");
x.t("parameters","pdst");
x.t("parameters","ntbox");
x.t("parameters","ngeodatausage");
x.t("parameters","ppoutputline");
x.t("parameters","pstream");
x.t("parameters","info");
x.t("parameters","ncsecwconfigtype");
x.t("parameters","[in]");
x.t("parameters","pabgr");
x.t("parameters","pargb");
x.t("parameters","ncurrentline");
x.t("parameters","pfilename");
x.t("parameters","pformat");
x.t("parameters","char");
x.t("parameters","none");
x.t("parameters","sname");
x.t("parameters","boolean");
x.t("parameters","dworldtlx");
x.t("parameters","pclientdata");
x.t("parameters","benable");
x.t("parameters","popencb");
x.t("parameters","szpath");
x.t("parameters","ppbuffer");
x.t("parameters","error");
x.t("parameters","etype");
x.t("parameters","nwidth");
x.t("parameters","nnextline");
x.t("parameters","hdevicecontext");
x.t("parameters","sensible");
x.t("parameters","correspond");
x.t("parameters","eerror");
x.t("parameters","nsizex");
x.t("parameters","ncsecwcompressclient");
x.t("parameters","szprojection");
x.t("parameters","nbands");
x.t("parameters","pviewsetinfo");
x.t("parameters","nband");
x.t("parameters","btransparent");
x.t("parameters","pbuffer");
x.t("parameters","pncsfileview");
x.t("parameters","elevel");
x.t("parameters","pbgra");
x.t("parameters","prgba");
x.t("parameters","nepsg");
x.t("parameters","pcallback");
x.t("parameters","fcwrotationdegrees");
x.t("parameters","plast");
x.t("parameters","nbackgroundcolor");
x.t("parameters","pbgrtriplet");
x.t("parameters","prgbtriplet");
x.t("parameters","ncsfileview");
x.t("parameters","uuid");
x.t("parameters","pcompressclient");
x.t("checking","status");
x.t("checking","whether");
x.t("checking","return");
x.t("checking","inequality");
x.t("checking","equality");
x.t("boolean","apply");
x.t("boolean","bprogressivedisplay");
x.t("boolean","pcancelcallback");
x.t("boolean","bfreecachedfile");
x.t("boolean","bcalculatesizesonly");
x.t("boolean","uint31");
x.t("boolean","uint32");
x.t("boolean","cncsrenderer::calchistograms");
x.t("boolean","enables");
x.t("boolean","cncsrenderer::gethistogram");
x.t("boolean","benable");
x.t("boolean","pbtransparent");
x.t("boolean","enable/disable");
x.t("boolean","cncsfile::breakdownurl");
x.t("boolean","bsigned");
x.t("boolean","specifies");
x.t("boolean","preadcallback");
x.t("boolean","bwrite");
x.t("boolean","enable");
x.t("boolean","btransparent");
x.t("boolean","value");
x.t("boolean","force");
x.t("boolean","cncsrenderer::applyluts");
x.t("boolean","bfreecache");
x.t("boolean","buffer");
x.t("boolean","specify");
x.t("ppncsfileviewfileinfoex","non");
x.t("shutdown","progress");
x.t("zero","foriginx");
x.t("zero","fcellincrementy");
x.t("zero","e.g");
x.t("zero","values");
x.t("compatible","pixel");
x.t("slower","better");
x.t("szdatum","uint32");
x.t("szdatum","[ecw_max_datum_len}");
x.t("szdatum","char");
x.t("szdatum","null");
x.t("szdatum","mapper");
x.t("szdatum","image");
x.t("szdatum","int32");
x.t("szdatum","ncsgetprojectionanddatum");
x.t("ecolorspace","color");
x.t("ecolorspace","ncsecwcelltype");
x.t("ncsecwcompressfreeclient","ncserror");
x.t("ncsecwcompressfreeclient","(pclient)");
x.t("ncsecwcompressfreeclient","ncsecwcompressclient");
x.t("ncsecwcompressfreeclient","called");
x.t("none","example");
x.t("none","parameter");
x.t("none","cncsrenderer::writejpeg");
x.t("none","pcancelcallback");
x.t("none","default");
x.t("none","cncsrenderer::readimage");
x.t("none","cncserror::operator=");
x.t("none","cncsrenderer::gethistogram");
x.t("none","compress");
x.t("none","value");
x.t("none","cncsfile::refreshupdateex");
x.t("none","class");
x.t("none","returns");
x.t("none","company");
x.t("none","cncsfile::setcompressclient");
x.t("none","specify");
x.t("provides","status");
x.t("provides","file");
x.t("provides","file-oriented");
x.t("prior","commencing");
x.t("prior","commencement");
x.t("programmer","open");
x.t("pdworldx","ieee8");
x.t("pdworldx","buffer");
x.t("exists","parameters");
x.t("exists","backwards");
x.t("cncsfile::getparameter","parameter");
x.t("cncsfile::getparameter","void");
x.t("cncsfile::getparameter","char");
x.t("sname","parameter");
x.t("sname","remarks");
x.t("ntype","call");
x.t("epje","profile");
x.t("16-byte","uuid");
x.t(".open","&stream");
x.t("nmax","jp2_compress_progression_lrcp");
x.t("nmax","65528");
x.t("dworldtlx","0.0");
x.t("dworldtlx","top");
x.t("dworldtlx","view");
x.t("dworldtlx","ieee8");
x.t("updating","gui");
x.t("cncsrenderer::gethistogram","boolean");
x.t("cncsrenderer::gethistogram","int32");
x.t("helpful","handling");
x.t("&cncserror::operator=","const");
x.t("generic","information");
x.t("area","within");
x.t("area","background");
x.t("area","dworldtlx");
x.t("area","initialised");
x.t("area","nblocksavailable");
x.t("megabytes","ncscfg_ecwp_cache_location");
x.t("pclientdata","void");
x.t("pclientdata","uint32");
x.t("pclientdata","pclientdata");
x.t("pclientdata","ncserror");
x.t("pclientdata","client");
x.t("pclientdata","remarks");
x.t("pclientdata","struct");
x.t("pclientdata","uint64");
x.t("makes","two");
x.t("projection","datum");
x.t("projection","name");
x.t("projection","string");
x.t("projection","mapper");
x.t("ascii","description");
x.t("ascii","string");
x.t("determine","progress");
x.t("loaded","image");
x.t("frees","compression");
x.t("continue","compression");
x.t("standard","cncsfile");
x.t("standard","yuv");
x.t("standard","output");
x.t("find","helpful");
x.t("find","appropriate");
x.t("developers","slightly");
x.t("boxes","cncsjp2xmlbox");
x.t("pdworldy","remarks");
x.t("pdworldy","buffer");
x.t("ntypechars","[4]");
x.t("ntypechars","cncsjp2box");
x.t("file.getncsfileview","cncsfile::getncsfileview");
x.t("profile","table");
x.t("profile","jp2_compress_levels");
x.t("profile","type");
x.t("profile","jp2_compress_profile_nitf_biif_ep");
x.t("profile","profile");
x.t("profile","nitf");
x.t("profile","jpeg");
x.t("profile","values");
x.t("dworldtly","0.0");
x.t("dworldtly","top");
x.t("dworldtly","view");
x.t("dworldtly","ieee8");
x.t(".ecw","extension");
x.t("benable","whether");
x.t("benable","remarks");
x.t("cncsrenderer::readlinebgr","uint8");
x.t("cncsrenderer::readlinebgr","ncsecwreadstatus");
x.t("cncsrenderer::readlinergb","uint8");
x.t("cncsrenderer::readlinergb","ncsecwreadstatus");
x.t("log_high","log_higher");
x.t("sdk","every");
x.t("sdk","currently");
x.t("sdk","callback");
x.t("sdk","user");
x.t("sdk","uses");
x.t("sdk","calculates");
x.t("sdk","time");
x.t("sdk","inside");
x.t("sdk","translating");
x.t("sdk","functionality");
x.t("sdk","parameters");
x.t("sdk","provides");
x.t("sdk","makes");
x.t("sdk","find");
x.t("sdk","allows");
x.t("sdk","attempt");
x.t("sdk","internal");
x.t("sdk","technology");
x.t("sdk","v3.0");
x.t("sdk","documented");
x.t("sdk","application");
x.t("sdk","two");
x.t("sdk","users");
x.t("sdk","based");
x.t("sdk","applications");
x.t("sdk","giving");
x.t("sdk","returns");
x.t("ncsecw_read_failed","read");
x.t("allows","embedding");
x.t("allows","sdk");
x.t("allows","detailed");
x.t("allows","client");
x.t("allows","developer");
x.t("allows","application");
x.t("composed","valid");
x.t("cellsizeunits","ecellsizeunits");
x.t("cellsizeunits","foriginy");
x.t("cellsizeunits","szdatum");
x.t("cellsizeunits","may");
x.t("ncsct_int32","ncsct_int64");
x.t("ncsct_ieee4","ncsct_ieee8");
x.t("stack","overflow");
x.t("stack","rather");
x.t("stack","space");
x.t("szkey","generated");
x.t("szkey","remarks");
x.t("sdk\u2019s","ecw");
x.t("resultant","compressed");
x.t("ncsfiletype","enum");
x.t("ncsfiletype","cncsfile::getfiletype");
x.t("ncsfiletype","ncscbmgetfiletype");
x.t("strings","parameters");
x.t("strings","sdk");
x.t("strings","epsg");
x.t("strings","image");
x.t("strings","mapping");
x.t("web","server");
x.t("pszprojection","char");
x.t("pszprojection","pointer");
x.t("correspondence","parameters");
x.t("search","open");
x.t("search","against");
x.t("cncsfile::getfileviewsetinfo","const");
x.t("cncsfile::getfileviewsetinfo","remarks");
x.t("address","appropriately");
x.t("pcliprect","point");
x.t("pcliprect","ieee8");
x.t("writes","current");
x.t("writes","jpeg");
x.t("phone","770");
x.t("allow","open");
x.t("lines","made");
x.t("sets","background");
x.t("sets","maximum");
x.t("sets","whether");
x.t("sets","extents");
x.t("coordinates","ncscbmsetfileview");
x.t("coordinates","callback");
x.t("coordinates","uint32");
x.t("coordinates","ddatasettly");
x.t("coordinates","parameters");
x.t("coordinates","area");
x.t("coordinates","dworldtly");
x.t("coordinates","input");
x.t("coordinates","know");
x.t("coordinates","returned");
x.t("coordinates","nsizex");
x.t("coordinates","ncscbmsetfileviewex");
x.t("coordinates","informative");
x.t("coordinates","dataset");
x.t("coordinates","ddatasetbrx");
x.t("coordinates","ddatasetbry");
x.t("coordinates","dworldbrx");
x.t("coordinates","dworldbry");
x.t("coordinates","ieee8");
x.t("coordinates","nbrx");
x.t("coordinates","returns");
x.t("coordinates","world");
x.t("target","compression");
x.t("target","quality");
x.t("target","maximum");
x.t("local","cache");
x.t("local","directory");
x.t("local","ecwp");
x.t("string","example");
x.t("string","four");
x.t("string","pszdatum");
x.t("string","[out]");
x.t("string","file");
x.t("string","[in]");
x.t("string","resulting");
x.t("string","szdatum");
x.t("string","error");
x.t("string","pnepsg");
x.t("string","describing");
x.t("string","folder");
x.t("string","e.g");
x.t("string","variable");
x.t("string","specifying");
x.t("string","optional");
x.t("string","protocol");
x.t("string","pointer");
x.t("string","returns");
x.t("attempt","decode");
x.t("popencb","callback");
x.t("popencb","char");
x.t("pclosecb","callback");
x.t("pclosecb","void");
x.t("natural","requirement");
x.t("array","callback");
x.t("array","size");
x.t("array","band");
x.t("array","scanline");
x.t("array","ncsfilebandinfo");
x.t("array","buffer");
x.t("fields","api");
x.t("fields","client");
x.t("write","compression");
x.t("write","mode");
x.t("write","next");
x.t("write","writelinebil");
x.t("write","cncsfile::setparameter");
x.t("write","world");
x.t("grayscale","uint8");
x.t("compress_yuv","ecompresshint");
x.t("compress_yuv","rgb");
x.t("compress_hint_best","perform");
x.t("(use_gml_wld)","geocoding");
x.t("compliance","profile");
x.t("fix","total");
x.t("adjust","view");
x.t("entire","image");
x.t("third","letters");
x.t("int","nline");
x.t("[inline]","remarks");
x.t("addition","functions");
x.t("structures","decompressing");
x.t("structures","describing");
x.t("structures","main");
x.t("structures","documented");
x.t("structures","called");
x.t("input","library");
x.t("input","remote");
x.t("input","file");
x.t("input","url");
x.t("input","[in]");
x.t("input","specified");
x.t("input","range");
x.t("input","parameters");
x.t("input","cell");
x.t("input","stream");
x.t("input","compressed");
x.t("input","filename");
x.t("input","epsg");
x.t("input","output");
x.t("input","data");
x.t("input","image");
x.t("input","character");
x.t("input","returns");
x.t("input","load");
x.t("input","buffer");
x.t("input","extents");
x.t("//simple","read");
x.t("moving","process");
x.t("solely","interoperability");
x.t("cell","ecellsizeunits");
x.t("cell","type");
x.t("cell","size");
x.t("cell","cellsizeunits");
x.t("cell","coordinates");
x.t("cell","band");
x.t("cell","types");
x.t("cell","values");
x.t("second","argument");
x.t("second","kind");
x.t("three","callback");
x.t("three","relevant");
x.t("thread","create");
x.t("thread","ncsecwcompress");
x.t("nblocksizex","uint32");
x.t("nblocksizex","nblocksizey");
x.t("nblocksizex","128");
x.t("cncsfile::detectgdtpath","cncsfile::formaterrortext");
x.t("cncsfile::detectgdtpath","static");
x.t("colr","plast");
x.t("file.getfilemimetype","cncsfile::getfiletype");
x.t("stream","example");
x.t("stream","open");
x.t("stream","parameters");
x.t("stream","stream.open");
x.t("width","height");
x.t("width","specified");
x.t("width","match");
x.t("width","nheight");
x.t("width","view");
x.t("resolution","layer");
x.t("resolution","component");
x.t("resource","available");
x.t("relative","total");
x.t("comparatively","expensive");
x.t("device","parameters");
x.t("device","dworldtly");
x.t("device","non-progressive");
x.t("device","overloaded");
x.t("device","context");
x.t("device","dworldbrx");
x.t("device","dworldbry");
x.t("device","returns");
x.t("pbtransparent","remarks");
x.t("problems","debugging");
x.t("functions","procedural");
x.t("functions","compression");
x.t("functions","implement");
x.t("functions","required");
x.t("functions","referenced");
x.t("functions","provided");
x.t("functions","interface");
x.t("functions","supplied");
x.t("functions","benefit");
x.t("functions","allows");
x.t("functions","three");
x.t("functions","functions");
x.t("functions","throw");
x.t("functions","ecw");
x.t("functions","define");
x.t("functions","information");
x.t("functions","called");
x.t("functions","classes");
x.t("functions","call");
x.t("functions","used");
x.t("functions","contained");
x.t("functions","following");
x.t("band","description");
x.t("band","numbering");
x.t("band","automatically");
x.t("band","interleaved");
x.t("band","list");
x.t("band","grayscale");
x.t("band","retrieve");
x.t("band","buffers");
x.t("band","e.g");
x.t("band","variable");
x.t("band","jpeg");
x.t("band","image");
x.t("band","indices");
x.t("band","numbers");
x.t("band","returns");
x.t("band","contains");
x.t("band","plinesteps");
x.t("failed","due");
x.t("progress","example");
x.t("progress","compression");
x.t("progress","bar");
x.t("progress","parameters");
x.t("progress","view");
x.t("progress","nblocksinview");
x.t("progress","used");
x.t("store","bil");
x.t("store","jpeg");
x.t("store","corresponding");
x.t("bandlist","pbandlist");
x.t("quality","bilinear");
x.t("quality","layers");
x.t("quality","output");
x.t("quality","jpeg");
x.t("quality","returns");
x.t("request","information");
x.t("geographic","location");
x.t("present","during");
x.t("solution","call");
x.t("pertinent","compression");
x.t("nblocksizey","uint32");
x.t("nblocksizey","specifies");
x.t("nblocksizey","128");
x.t("nblocksizey","specify");
x.t("allowing","application");
x.t("metadata","file");
x.t("metadata","boxes");
x.t("metadata","control");
x.t("metadata","written");
x.t("metadata","chapter");
x.t("metadata","usage");
x.t("metadata","jpeg");
x.t("metadata","controls");
x.t("metadata","gml");
x.t("npje","compression");
x.t("npje","profile");
x.t("retrieves","compliance");
x.t("cmyiostream","stream");
x.t("cncsfile::setoemkey","void");
x.t("cncsfile::setoemkey","char");
x.t("decoders","jp2_compress_profile_baseline_1");
x.t("decoders","jp2_compress_profile_baseline_2");
x.t("decoders","jp2_compress_profile_nitf_biif_np");
x.t("scanline","written");
x.t("scanline","bgr");
x.t("scanline","rgb");
x.t("scanline","bil");
x.t("scanline","buffer");
x.t("non-progressive","mode");
x.t("overloaded","version");
x.t("overloaded","assignment");
x.t("overloaded","constructor");
x.t("overloaded","inequality");
x.t("recent","call");
x.t("cncsrenderer::readlinebil","uint8");
x.t("cncsrenderer::readlinebil","ncsecwreadstatus");
x.t("cncsrenderer::setbackgroundcolor","void");
x.t("cncsrenderer::setbackgroundcolor","colorref");
x.t(".tif","becomes");
x.t("ncserror","ncscbmsetfileview");
x.t("ncserror","cncsfile::close");
x.t("ncserror","cncsfile::convertdatasettoworld");
x.t("ncserror","cncsfile::convertworldtodataset");
x.t("ncserror","ncsecwcompressopen");
x.t("ncserror","cncsrenderer::writeworldfile");
x.t("ncserror","enum");
x.t("ncserror","cncsrenderer::writejpeg");
x.t("ncserror","ncscbmclosefileviewex");
x.t("ncserror","cncsrenderer::readimage");
x.t("ncserror","ncsecwcompressclose");
x.t("ncserror","ncsecwsetconfig");
x.t("ncserror","cncsfile::setview");
x.t("ncserror","ncsecwcompressfreeclient");
x.t("ncserror","ncscbmgetviewfileinfo");
x.t("ncserror","ncscbmgetviewinfo");
x.t("ncserror","ncs_call");
x.t("ncserror","eerror");
x.t("ncserror","nerrornum");
x.t("ncserror","ncscbmsetfileviewex");
x.t("ncserror","ncscbmopenfileview");
x.t("ncserror","ncsecwcompress");
x.t("ncserror","value");
x.t("ncserror","ncscbmgetviewfileinfoex");
x.t("ncserror","ncscbmclosefileview");
x.t("ncserror","cncsrenderer::drawimage");
x.t("ncserror","cncserror::geterrornumber");
x.t("ncserror","ncsgetepsgcode");
x.t("ncserror","ncsecwsetiocallbacks");
x.t("ncserror","ncsgetprojectionanddatum");
x.t("error","pstatuscallback");
x.t("error","default");
x.t("error","text");
x.t("error","logged");
x.t("error","logging");
x.t("error","checking");
x.t("error","number");
x.t("error","reporting");
x.t("error","returned");
x.t("error","assigned");
x.t("error","code");
x.t("error","reference");
x.t("error","message");
x.t("error","occurred");
x.t("error","ncsecw_read_cancelled");
x.t("error","messaging");
x.t("error","s\\n");
x.t("error","occur");
x.t("error","log");
x.t("error","object");
x.t("ntlx","uint32");
x.t("ntlx","top");
x.t("ntlx","ntly");
x.t("enable/disable","buffered");
x.t("szfilename","void");
x.t("sizes","parameters");
x.t("raw","nad27");
x.t("raw","type");
x.t("raw","wgs84");
x.t("ncsct_ieee8","pbands");
x.t("blocks","available");
x.t("blocks","cover");
x.t("blocks","present");
x.t("blocks","view");
x.t("calculate","progress");
x.t("backwards","compatability");
x.t("backwards","compatibility");
x.t("szpath","ncsgetgdtpath");
x.t("szpath","cncsfile::getgdtpath");
x.t("szpath","fully");
x.t("szpath","remarks");
x.t("ncssetjp2geodatausage","void");
x.t("ncssetjp2geodatausage","(use_gml_wld)");
x.t("ncssetjp2geodatausage","geodatausage");
x.t("point","functionality");
x.t("point","sdk");
x.t("point","clip");
x.t("oriented","object");
x.t("epsgcode","input");
x.t("lie","within");
x.t("transparency","mode");
x.t("transparency","status");
x.t("collect","histograms");
x.t("display","area");
x.t("display","renderer");
x.t("ppbuffer","uint32");
x.t("ppbuffer","pointer");
x.t("refresh","callback");
x.t("refresh","update");
x.t("ppncsfileviewfileinfo","remarks");
x.t("ppncsfileviewfileinfo","non");
x.t("ppncsfileview","ncsecwreadstatus");
x.t("red","green");
x.t("red","band");
x.t("etype","preferred");
x.t("etype","void");
x.t("etype","uint16");
x.t("etype","sample");
x.t("etype","ecw");
x.t("etype","remarks");
x.t("etype","output");
x.t("etype","ieee4");
x.t("ntly","uint32");
x.t("ntly","top");
x.t("ntly","nbrx");
x.t("know","refresh");
x.t("automatic","generation");
x.t("ecw_cell_units_feet","szdatum");
x.t("ecw_cell_units_feet","fcellincrementx");
x.t("probable","content");
x.t("commence","compressing");
x.t("finally","ncsecwcompressfreeclient");
x.t("especially","compressing");
x.t("next","line");
x.t("next","box");
x.t("next","xml");
x.t("next","image");
x.t("next","uuid");
x.t("noutputbands","number");
x.t("noutputbands","uint64");
x.t("//these","filled");
x.t("pview","file.getncsfileview");
x.t("pview","ncscbmopenfileview");
x.t("members","cncsrenderer");
x.t("members","ncsfileviewfileinfoex");
x.t("members","class");
x.t("respectively","constructor");
x.t("cncsfile::breakdownurl","char");
x.t("cncsfile::breakdownurl","boolean");
x.t("int8","ppoutputline");
x.t("int8","dworld");
x.t("cncsfile::getstream","cncsjpciostream");
x.t("cncsfile::getstream","remarks");
x.t("disk","memory");
x.t("1.0","default");
x.t("expensive","update");
x.t("opaque","mode");
x.t("opaque","opaque");
x.t("(blits)","internal");
x.t("renderer","responsible");
x.t("renderer","parameters");
x.t("renderer","incorporated");
x.t("renderer","used");
x.t("cncserror::log","void");
x.t("paradigms","referred");
x.t("select","either");
x.t("bitdepth","bit");
x.t("reason","specify");
x.t("readlinexxx","functions");
x.t("throw","error");
x.t("first","third");
x.t("first","kind");
x.t("space","solution");
x.t("space","image");
x.t("space","prevent");
x.t("space","expressed");
x.t("nbits","boolean");
x.t("bsigned","char");
x.t("six","associated");
x.t("feature","ecw");
x.t("ninoutsizex","uint32");
x.t("ninoutsizex","nblocksizey");
x.t("means","opening");
x.t("refresh-updateex","writereadline");
x.t("ndatasetx","dataset");
x.t("ndatasetx","int32");
x.t("fileinfo","structure");
x.t("minimum","range");
x.t("jp2_geodata_usage","parameter");
x.t("jp2_geodata_usage","uint32");
x.t("clip","rectangle");
x.t("clip","draw");
x.t("luts","returns");
x.t("decompress","layers");
x.t("decompress","image");
x.t("processing","data");
x.t("processing","call");
x.t("number","components");
x.t("number","line");
x.t("number","open");
x.t("number","times");
x.t("number","initialization");
x.t("number","raster");
x.t("number","target");
x.t("number","quality");
x.t("number","blocks");
x.t("number","error");
x.t("number","next");
x.t("number","bands");
x.t("number","scanlines");
x.t("number","100");
x.t("number","compared");
x.t("number","output");
x.t("number","cells");
x.t("control","block");
x.t("control","api");
x.t("control","metadata");
x.t("control","error");
x.t("control","usage");
x.t("control","reasonable");
x.t("control","appropriate");
x.t("control","limited");
x.t("persistant","local");
x.t("decoding","ecw");
x.t("ninoutsizey","uint32");
x.t("others","inserted");
x.t("underlying","cncsjpciostream");
x.t("underlying","file");
x.t("underlying","cncsjp2file");
x.t("underlying","ncsfileview");
x.t("initializes","new");
x.t("initializes","members");
x.t("written","file");
x.t("written","input");
x.t("written","box's");
x.t("written","given");
x.t("written","output");
x.t("written","jpeg");
x.t("written","returns");
x.t("cncserror","cncsfile::writereadline");
x.t("cncserror","objects");
x.t("cncserror","cncsfile::setrefreshcallback");
x.t("cncserror","cncsfile::write");
x.t("cncserror","cncsfile::setview");
x.t("cncserror","cncsfile::setfileinfo");
x.t("cncserror","&cncserror::operator=");
x.t("cncserror","cncserror");
x.t("cncserror","cncsfile::getepsgcode");
x.t("cncserror","value");
x.t("cncserror","remarks");
x.t("cncserror","cncsfile::addbox");
x.t("cncserror","cncsfile::open");
x.t("cncserror","classes");
x.t("cncserror","cncsfile::getprojectionanddatum");
x.t("cncserror","class");
x.t("cncserror","&error");
x.t("cncserror","cncsfile::writelinebil");
x.t("cncserror","cncsfile::setcompressclient");
x.t("cncserror","object");
x.t("ndatasety","dataset");
x.t("ndatasety","ieee8");
x.t("&profiletype","parameters");
x.t("nitf","epje");
x.t("nitf","npje");
x.t("jp2_compress_profile_nitf_biif_np","none");
x.t("packetheader","markers");
x.t("downscaling","jpeg");
x.t("jp2:decompress:layers","uint32");
x.t("gui","progress");
x.t("gui","updated");
x.t("function","available");
x.t("function","provided");
x.t("function","necessary");
x.t("function","ncsfileviewsetinfo");
x.t("function","parameters");
x.t("function","reason");
x.t("function","acquires");
x.t("function","added");
x.t("function","return");
x.t("function","ncsecwcompress");
x.t("function","similar");
x.t("function","opening");
x.t("function","pointers");
x.t("function","breaks");
x.t("function","takes");
x.t("function","called");
x.t("function","deprecated");
x.t("function","call");
x.t("function","used");
x.t("function","returns");
x.t("function","load");
x.t("function","advise");
x.t("function","reading");
x.t("maximum","size");
x.t("maximum","number");
x.t("maximum","memory");
x.t("ncscfg_cache_maxopen","uint32");
x.t("better","quality");
x.t("determining","location");
x.t("fastest","possible");
x.t("commonly","used");
x.t("namely","cncsfile");
x.t("parent","class");
x.t("retrieve","underlying");
x.t("retrieve","associated");
x.t("siz","marker");
x.t("indicating","proportion");
x.t("indicating","success");
x.t("nitf/biif","epje");
x.t("nitf/biif","npje");
x.t("nwidth","uint32");
x.t("nwidth","width");
x.t("nwidth","view");
x.t("nwidth","int32");
x.t("length","created");
x.t("reporting","class");
x.t("ecw","compression");
x.t("ecw","files");
x.t("ecw","cache");
x.t("ecw","jpeg2000");
x.t("ecw","file");
x.t("ecw","format");
x.t("ecw","compress");
x.t("ecw","configuration");
x.t("ecw","jpeg");
x.t("ecw","decompression");
x.t("different","kinds");
x.t("different","cell");
x.t("different","thread");
x.t("different","functions");
x.t("different","ways");
x.t("different","types");
x.t("reads","current");
x.t("reads","line");
x.t("reads","cell");
x.t("reads","view");
x.t("whether","apply");
x.t("whether","open");
x.t("whether","histogram");
x.t("whether","file");
x.t("whether","perform");
x.t("whether","input");
x.t("whether","renderer");
x.t("whether","cncserror");
x.t("whether","include");
x.t("whether","free");
x.t("whether","draw");
x.t("whether","application");
x.t("whether","two");
x.t("may","provide");
x.t("may","acquire");
x.t("may","multiple");
x.t("may","zero");
x.t("may","may");
x.t("may","valid");
x.t("may","deteriorate");
x.t("may","negative");
x.t("software","uses");
x.t("afterwards","specify");
x.t("ncscfg_cache_maxmem","uint32");
x.t("specifies","required");
x.t("specifies","nearest");
x.t("specifies","number");
x.t("specifies","whether");
x.t("corrupt","ecw");
x.t("ncsecw","calls");
x.t("define","threadsafe");
x.t("against","pszprojection");
x.t("box's","unparse");
x.t("&box","cncsfile::breakdownurl");
x.t("receive","bgra");
x.t("receive","rgba");
x.t("receive","scanline");
x.t("receive","abgr");
x.t("receive","argb");
x.t("receive","bgr");
x.t("receive","output");
x.t("private","data");
x.t("maximun","minimum");
x.t("chapter","geocoding");
x.t("cnsrenderer","cncsfile::setview");
x.t("readimage","transfer");
x.t("readimage","immediately");
x.t("initialised","system");
x.t("share","error");
x.t("language","functions");
x.t("ways","close");
x.t("nerror","ncs_success");
x.t("nerror","ncscbmgetviewfileinfo");
x.t("nerror","ncscbmgetviewfileinfoex");
x.t("nerror","ncscbmclosefileview");
x.t("bands","ppoutputline");
x.t("bands","pbandlist");
x.t("bands","top");
x.t("bands","file");
x.t("bands","input");
x.t("bands","include");
x.t("bands","read");
x.t("bands","output");
x.t("index","files");
x.t("index","actual");
x.t("dither","decompressed");
x.t("instead","built-in");
x.t("instead","desired");
x.t("instead","parameters");
x.t("instead","allowing");
x.t("instead","ncscbmsetfileviewex");
x.t("instead","cfileiostream");
x.t("(bytes)","control");
x.t("characteristics","current");
x.t("accessing","two");
x.t("rotation","image");
x.t("(pclient)","ncsecwcompressclose");
x.t("(pclient)","ncsecwcompressfreeclient");
x.t("(pclient)","ncsecwcompresssetoemkey");
x.t("streamline","sdk");
x.t("responsibility","application");
x.t("stream.open","c:\\\\foo.nitf");
x.t("abgr","uint32");
x.t("abgr","data");
x.t("argb","uint32");
x.t("argb","data");
x.t("jpc:downscaling:max","jpc:downscaling:min");
x.t("jp2_decompress_reconstruction_","parameter");
x.t("begins","callback");
x.t("application\u2019s","user");
x.t("scanlines","large");
x.t("scanlines","output");
x.t("reduce","amount");
x.t("stores","buffer");
x.t("detailed","error");
x.t("detailed","control");
x.t("section","constructor");
x.t("section","two");
x.t("section","contains");
x.t("opens","compression");
x.t("opens","file");
x.t("opens","view");
x.t("closes","compression");
x.t("closes","open");
x.t("closes","file");
x.t("closes","view");
x.t("closes","views");
x.t("format","determined");
x.t("format","once");
x.t("format","current");
x.t("format","extension");
x.t("format","api");
x.t("format","codes");
x.t("format","parameters");
x.t("format","string");
x.t("format","return");
x.t("format","packed");
x.t("format","buffers");
x.t("format","e.g");
x.t("format","szprojection");
x.t("format","valid");
x.t("format","internally");
x.t("format","jpeg");
x.t("format","optionally");
x.t("(nerror)","ncscbmclosefileviewex");
x.t("(nerror)","ncscbmgetviewinfo");
x.t("(nerror)","ncscbmsetfileviewex");
x.t("(nerror)","ncscbmgetviewfileinfoex");
x.t("(nerror)","//interactive");
x.t("release","sdk");
x.t("release","memory");
x.t("release","additional");
x.t("release","associated");
x.t("release","resources");
x.t("ncscbmgetviewfileinfo","file");
x.t("ncscbmgetviewfileinfo","ncserror");
x.t("ncscbmgetviewfileinfo","function");
x.t("ncscbmgetviewfileinfo","pmyview-");
x.t("ncscbmgetviewfileinfo","ncsfileview");
x.t("ncscbmgetviewinfo","ncserror");
x.t("ncscbmgetviewinfo","function");
x.t("ncscbmgetviewinfo","pmyview-");
x.t("ncscbmgetviewinfo","call");
x.t("ncscbmgetviewinfo","ncsfileview");
x.t("types","parameters");
x.t("types","metadata");
x.t("types","extended");
x.t("directory","cache");
x.t("directory","ncscfg_jp2_autogen_j2i");
x.t("directory","returns");
x.t("allocated","compression");
x.t("allocated","projection");
x.t("allocated","ncsfileviewfileinfoex");
x.t("allocated","resources");
x.t("compressed","file");
x.t("compressed","normally");
x.t("compressed","checking");
x.t("compressed","optional");
x.t("compressed","image");
x.t("returned","freed");
x.t("returned","datum");
x.t("returned","usually");
x.t("returned","parameters");
x.t("returned","projection");
x.t("returned","error");
x.t("returned","transparency");
x.t("returned","client");
x.t("returned","epsg");
x.t("returned","ftlx");
x.t("returned","call");
x.t("typedef","struct");
x.t("ncsecwcompressallocclient","ncsecwcompressopen");
x.t("ncsecwcompressallocclient","(void)");
x.t("ncsecwcompressallocclient","fields");
x.t("ncsecwcompressallocclient","ncsecwcompressclient");
x.t("acquires","data");
x.t("preadcallback","pstatuscallback");
x.t("preadcallback","mandatory");
x.t("preadcallback","boolean");
x.t("preadcallback","function");
x.t("preadcallback","struct");
x.t("nnextline","void");
x.t("nnextline","argument");
x.t("nnextline","next");
x.t("nnextline","number");
x.t("nnextline","ieee4");
x.t("scan","line");
x.t("(multiband)","compress_rgb");
x.t("pnepsg","remarks");
x.t("pnepsg","pointer");
x.t("internal","func");
x.t("internal","structure");
x.t("internal","buffer");
x.t("filename","example");
x.t("filename","excepting");
x.t("filename","components");
x.t("filename","resulting");
x.t("filename","base");
x.t("filename",".ecw");
x.t("filename","function");
x.t("filename","filename");
x.t("filename","nquality");
x.t("filename","returns");
x.t("filename","associated");
x.t("cncsfile::getfiletype","ncsfiletype");
x.t("cncsfile::getfiletype","remarks");
x.t("var_args","style");
x.t("xml","box");
x.t("bwrite","false");
x.t("bwrite","selects");
x.t("int64","ppoutputline");
x.t("int64","nmax");
x.t("rapidly","application");
x.t("hdevicecontext","lprect");
x.t("hdevicecontext","win32");
x.t("match","setview");
x.t("match","extents");
x.t("histograms","based");
x.t("handling","problems");
x.t("sensible","default");
x.t("simply","opens");
x.t("view-specific","file");
x.t("alpha","band");
x.t("alpha","alpha");
x.t("alpha","blending");
x.t("added","possibility");
x.t("added","flexibility");
x.t("cbufferediostream","instead");
x.t("cbufferediostream","used");
x.t("describing","functionality");
x.t("describing","width");
x.t("describing","error");
x.t("describing","data");
x.t("purpose","function");
x.t("purpose","detailed");
x.t("purpose","application");
x.t("read/write","version");
x.t("compatability","older");
x.t("file's","coordinate");
x.t("georeferenced","error");
x.t("found.\\r\\n","cncsfile::getfile");
x.t("necessarily","match");
x.t("assigned","returns");
x.t("reference","introduction");
x.t("reference","api");
x.t("reference","cncsfile");
x.t("reference","error");
x.t("reference","cncserror");
x.t("reference","newly");
x.t("reference","integer");
x.t("reference","cncsrenderer");
x.t("end","select");
x.t("rgb","triplets");
x.t("rgb","uint8");
x.t("rgb","images");
x.t("rgb","format");
x.t("rgb","bgr");
x.t("rgb","packed");
x.t("rgb","conv");
x.t("rgb","image");
x.t("bgr","uint8");
x.t("bgr","format");
x.t("bgr","packed");
x.t("bgr","data");
x.t("bgr","image");
x.t("eerror","ncscbmsetfileview");
x.t("eerror","enum");
x.t("eerror","ncs_success");
x.t("eerror","[inline]");
x.t("eerror","ncscbmsetfileviewex");
x.t("eerror","ncscbmopenfileview");
x.t("eerror","ncsecwcompress");
x.t("eerror","ptext");
x.t("code","example");
x.t("code","cncsfile::readlinebgra");
x.t("code","cncsfile::readlinergba");
x.t("code","provided");
x.t("code","providing");
x.t("code","mandatory");
x.t("code","mappings");
x.t("code","[out]");
x.t("code","e\\n");
x.t("code","parameters");
x.t("code","cncsrenderer::readlinergb");
x.t("code","sdk");
x.t("code","search");
x.t("code","cncsrenderer::readlinebil");
x.t("code","cncsrenderer::setbackgroundcolor");
x.t("code","found.\\r\\n");
x.t("code","cncsfile::readlineargb");
x.t("code","d\\r\\n");
x.t("code","mapper");
x.t("code","cncsfile::refreshupdate");
x.t("code","cncsfile::readlinebgr");
x.t("code","cncsfile::readlinergb");
x.t("code","projected");
x.t("code","cncsfile::readlinebil");
x.t("code","cncsfile::getbox");
x.t("code","otherwise");
x.t("code","readline");
x.t("code","returns");
x.t("code","associated");
x.t("client","inserts");
x.t("client","program");
x.t("client","data");
x.t("client","structure");
x.t("client","call");
x.t("2gb","ncscfg_cache_maxopen");
x.t("enable","persistant");
x.t("neighbour","resampling");
x.t("ncs_call","ptellcb");
x.t("ncs_call","pseekcb");
x.t("ncs_call","preadcb");
x.t("ncs_call","popencb");
x.t("ncs_call","pclosecb");
x.t("poffset","remarks");
x.t("fcellincrementx","cell");
x.t("fcellincrementx","fcellincrementy");
x.t("fcellincrementx","ieee8");
x.t("follow","schedule");
x.t("task","uint32");
x.t("task","ecw");
x.t("task","cncsfile::writecancel");
x.t("task","returns");
x.t("registration","cell");
x.t("epsg","codes");
x.t("epsg","code");
x.t("epsg","pcs");
x.t("hostname","resulting");
x.t("hostname","filename");
x.t("cncsfile::getuuidbox","virtual");
x.t("cncsfile::getuuidbox","ncsuuid");
x.t("cncsfile::readlineabgr","ncsecwreadstatus");
x.t("cncsfile::readlineabgr","uint32");
x.t("cncsfile::readlineargb","ncsecwreadstatus");
x.t("cncsfile::readlineargb","uint32");
x.t("steps","dataset");
x.t("steps","cells");
x.t("correspond","dynamic");
x.t("setextents","call");
x.t(".jpg","becomes");
x.t("return","straight");
x.t("return","true");
x.t("return","next");
x.t("return","cncserror");
x.t("return","epsg");
x.t("return","value");
x.t("return","image");
x.t("return","percentage");
x.t("return","pointer");
x.t("packed","bits");
x.t("packed","32bits");
x.t("packed","image");
x.t("ncscfg_use_buffered_io_stream","boolean");
x.t("folder","default");
x.t("folder","named");
x.t("fcellincrementy","cell");
x.t("fcellincrementy","input");
x.t("fcellincrementy","ieee8");
x.t("completes","ncsecwcompressclose");
x.t("sizeof","(ncsfileviewfileinfoex)");
x.t("fully","qualified");
x.t("slightly","control");
x.t("setfileinfo","jp2_compress_include_sop");
x.t("setfileinfo","setparameter");
x.t("setfileinfo","jp2_compress_tile_height");
x.t("file.open","c:\\\\georeferenced.jp2");
x.t("file.open","c:\\\\foo.jp2");
x.t("file.open","c:\\\\georeferenced.ecw");
x.t("file.open","ecwp://localhost/sampleiws/");
x.t("file.open","c:\\\\foo.ecw");
x.t("purlpath","url");
x.t("purlpath","char");
x.t("purlpath","boolean");
x.t("purlpath","location");
x.t("dworldx","world");
x.t("nerrornum","[static]");
x.t("nerrornum","error");
x.t("bool","bprogressivedisplay");
x.t("bool","cncserror::operator==");
x.t("bool","cncserror::operator");
x.t("bool","cncsfile::writecancel");
x.t("compress","according");
x.t("compress","client");
x.t("compress","class");
x.t("thus","once");
x.t("override","method");
x.t("override","virtual");
x.t("override","function");
x.t("drawn","don\u2019t");
x.t("drawn","parameters");
x.t("drawn","display");
x.t("drawn","using");
x.t("drawn","extents");
x.t("level","required");
x.t("level","specified");
x.t("level","error");
x.t("level","greater");
x.t("throughout","section");
x.t("given","open");
x.t("given","time");
x.t("given","name");
x.t("given","ncsecwcompressclient");
x.t("given","mapper");
x.t("closure","file");
x.t("memory","cache");
x.t("memory","ecw");
x.t("memory","allocated");
x.t("memory","returns");
x.t("memory","buffer");
x.t("memory","ecwp");
x.t("ncsecwcelltype","etype");
x.t("ncsecwcelltype","ecelltype");
x.t("buffers","different");
x.t("buffers","receive");
x.t("extended","version");
x.t("nsizex","uint32");
x.t("nsizex","nsizey");
x.t("nsizex","view");
x.t("previous","usage");
x.t("previous","setfileviews");
x.t("exact","world");
x.t("database","without");
x.t("atl","control");
x.t("compress_hint_none","compression");
x.t("(ncsfileviewfileinfoex)","true");
x.t("setparameter","write");
x.t("ready","blitting");
x.t("ready","handle");
x.t("header","box");
x.t("header","values");
x.t("broken","down");
x.t("dworldy","int32");
x.t("dworldy","world");
x.t("cncsfile::getepsgcode","char");
x.t("cncsfile::getepsgcode","cncserror");
x.t("cncsfile::getepsgcode","remarks");
x.t("cncsfile::getepsgcode","int32");
x.t("cncsfile::getepsgcode","nutm11");
x.t("100","indicating");
x.t("100","representing");
x.t("jp2_compress_precinct_width","uint32");
x.t("jpc:downscaling:enabled","boolean");
x.t("jp2_compress_progression_lrcp","none");
x.t("option","ecw");
x.t("rectangle","describing");
x.t("pending","imagery");
x.t("successfully","current");
x.t("message","cncserror");
x.t("e.g","nad27");
x.t("e.g","response");
x.t("e.g","projection");
x.t("e.g","profile");
x.t("e.g","raw");
x.t("e.g","red");
x.t("e.g","int64");
x.t("e.g","rgb");
x.t("e.g","memory");
x.t("e.g","20:1");
x.t("e.g","jpeg");
x.t("e.g","nutm11");
x.t("pmyview-","szinputfilename");
x.t("pmyview-","pncsfileview");
x.t("nbands","void");
x.t("nbands","uint16");
x.t("nbands","uint32");
x.t("nbands","pbandlist");
x.t("nbands","number");
x.t("nbands","int32");
x.t("nsizey","uint16");
x.t("nsizey","uint32");
x.t("nsizey","size");
x.t("nsizey","eerror");
x.t("nsizey","view");
x.t("nsizey","remarks");
x.t("nsizey","image");
x.t("nsizey","ftlx");
x.t("nsizey","ieee8");
x.t("finished","processing");
x.t("actual","band");
x.t("ncscbmsetfileviewex","fbrx");
x.t("ncscbmsetfileviewex","ncserror");
x.t("ncscbmsetfileviewex","pncsfileview");
x.t("ncscbmsetfileviewex","dataset");
x.t("ncscbmsetfileviewex","ncsfileview");
x.t("resampling","false");
x.t("resampling","true");
x.t("bilinear","resampling");
x.t("upon","opening");
x.t("kind","generic");
x.t("kind","information");
x.t("szprojection","[ecw_max_projection_len]");
x.t("szprojection","-this");
x.t("szprojection","char");
x.t("szprojection","null");
x.t("szprojection","mapper");
x.t("szprojection","ncsfileviewfileinfo");
x.t("topleft","corner");
x.t("ncsct_uint8","ncsct_uint16");
x.t("developer-defined","callback");
x.t("developer-defined","read");
x.t("developer-defined","subclass");
x.t("ncsecwcompressclient","pinfo");
x.t("ncsecwcompressclient","compression");
x.t("ncsecwcompressclient","fills");
x.t("ncsecwcompressclient","char");
x.t("ncsecwcompressclient","pclient");
x.t("ncsecwcompressclient","ncsecwcompressallocclient");
x.t("ncsecwcompressclient","typedef");
x.t("ncsecwcompressclient","remarks");
x.t("ncsecwcompressclient","data");
x.t("ncsecwcompressclient","structure");
x.t("ncsecwcompressclient","pcompressclient");
x.t("variable","parameter");
x.t("variable","ppinputarray");
x.t("variable","store");
x.t("variable","receive");
x.t("variable","thus");
x.t("variable","contained");
x.t("variable","containing");
x.t("[max_path]","char");
x.t("[max_path]","ieee4");
x.t("conv","yuv");
x.t("documentation","describing");
x.t("principal","methods");
x.t("marker","jpeg");
x.t("0xb","0xc");
x.t("(pbox)","null");
x.t("event","application");
x.t("whose","behavior");
x.t(".jgw",".tif");
x.t("greater","equal");
x.t("simplicity","ease");
x.t("bil","pixel");
x.t("bil","band");
x.t("bil","format");
x.t("bil","data");
x.t("bil","image");
x.t("ncscbmopenfileview","multiple");
x.t("ncscbmopenfileview","char");
x.t("ncscbmopenfileview","parameters");
x.t("ncscbmopenfileview","ncserror");
x.t("ncscbmopenfileview","pmyview-");
x.t("ncscbmopenfileview","szinputfilename");
x.t("ncscbmopenfileview","c:\\\\foo.ecw");
x.t("ppncsfileviewsetinfo","current");
x.t("ppncsfileviewsetinfo","remarks");
x.t("null","callback");
x.t("null","pbox");
x.t("null","szmime");
x.t("null","printf");
x.t("null","char");
x.t("null","nerror");
x.t("null","szprojection");
x.t("null","ncscbmgetfiletype");
x.t("null","remarks");
x.t("null","inline");
x.t("null","cncsfile::getprojectionanddatum");
x.t("null","ncsfileviewfileinfoex");
x.t("null","using");
x.t("made","available");
x.t("made","free");
x.t("made","cells");
x.t("less","equal");
x.t("less","quality");
x.t("closing","files");
x.t("closing","returns");
x.t("ncsfilecolorspace","ecolorspace");
x.t("ecelltype","ncsfilebandinfo");
x.t("ecelltype","data");
x.t("ncsecwcompress","every");
x.t("ncsecwcompress","during");
x.t("ncsecwcompress","ncserror");
x.t("ncsecwcompress","(pclient)");
x.t("ncsecwcompress","ncsecwcompressclient");
x.t("ncsecwcompress","called");
x.t("compress_hint_fast","perform");
x.t("1024","2048");
x.t("architecture","compression");
x.t("destructor","virtual");
x.t("destructor","cncsfile");
x.t("destructor","cncserror");
x.t("destructor","cncsrenderer");
x.t("[virtual]","destructor");
x.t("[virtual]","remarks");
x.t("occurred","example");
x.t("occurred","notes");
x.t("occurred","cncsfile::setgdtpath");
x.t("occurred","cncsfile::writereadline");
x.t("occurred","cncsfile::write");
x.t("occurred","cncsfile::setview");
x.t("occurred","cncsfile::setfileinfo");
x.t("occurred","cncsfile::writestatus");
x.t("occurred","cncserror::geterrornumber");
x.t("cncsfile::getfileinfo","const");
x.t("cncsfile::getfileinfo","remarks");
x.t("ppdatum","remarks");
x.t("ppdatum","output");
x.t("0xc","0xd");
x.t("pviewsetinfo","[virtual]");
x.t("pviewsetinfo","remarks");
x.t("pviewsetinfo","pointer");
x.t("reimplemented","cncsjp2fileview");
x.t("reimplemented","cnsrenderer");
x.t("jp2_compress_tile_width","uint32");
x.t("jpc:d","ownscaling:max");
x.t("nheight","height");
x.t("nheight","view");
x.t("nheight","remarks");
x.t("nheight","int32");
x.t("nheight","ieee8");
x.t("nband","uint32");
x.t("nband","band");
x.t("existing","object");
x.t("compared","checking");
x.t("variety","different");
x.t("configuration","parameter");
x.t("configuration","parameters");
x.t("amount","imagery");
x.t("amount","view");
x.t("amount","work");
x.t("callbacks","defined");
x.t("qualified","path");
x.t("c:\\\\georeferenced.ecw","false");
x.t("d\\r\\n","nepsg");
x.t("layers","however");
x.t("layers","decoded");
x.t("layers","transparency");
x.t("layers","jp2_decompress_reconstruction_");
x.t("layers","jp2:compliance:profi");
x.t("0xd","0xe");
x.t("include","start-of-");
x.t("include","end-of-");
x.t("include","view");
x.t("include","order");
x.t("instances","cncsfile");
x.t("ndatasetbrx","uint32");
x.t("ndatasetbrx","dataset");
x.t("ndatasetbrx","int32");
x.t("ndatasetbrx","bottom");
x.t("informative","parameters");
x.t("informative","dworldtly");
x.t("informative","dworldbrx");
x.t("informative","dworldbry");
x.t("informative","returns");
x.t("technology","best");
x.t("cncsrenderer::settransparent","void");
x.t("cncsrenderer::settransparent","boolean");
x.t("btransparent","boolean");
x.t("btransparent","remarks");
x.t("value","example");
x.t("value","apply");
x.t("value","type");
x.t("value","ncs_success");
x.t("value","true");
x.t("value","jp2h");
x.t("value","comparison");
x.t("value","ntype");
x.t("value","find");
x.t("value","sdk");
x.t("value","search");
x.t("value","allows");
x.t("value","error");
x.t("value","cncserror::log");
x.t("value","number");
x.t("value","indicating");
x.t("value","whether");
x.t("value","different");
x.t("value","null");
x.t("value","(s)");
x.t("value","specifying");
x.t("value","data");
x.t("value","capabilities");
x.t("value","errorchecking");
x.t("value","gdt");
x.t("value","either");
x.t("value","associated");
x.t("value","representing");
x.t("similar","ncscbmsetfileview");
x.t("similar","components");
x.t("similar","ncscbmclosefileview");
x.t("graphics","software");
x.t("ncscfg_force_file_reopen","(boolean)");
x.t("ncscfg_force_file_reopen","boolean");
x.t("named","ecwpcache");
x.t("ncscfg_optimize_use_nearest_neighbou","boolean");
x.t("routines","coded");
x.t("20:1","compression");
x.t("mapper","datum");
x.t("mapper","projection");
x.t("mapper","image");
x.t("mapper","gdt");
x.t("mapper","style");
x.t("ncsfilebandinfo","pbands");
x.t("ncsfilebandinfo","structures");
x.t("ncsfilebandinfo","typedef");
x.t("ncsfilebandinfo","remarks");
x.t("ncsfilebandinfo","structure");
x.t("ncsfilebandinfo","struct");
x.t("additional","arguments");
x.t("additional","public");
x.t("additional","data");
x.t("additional","resources");
x.t("nblocksavailable","uint32");
x.t("nblocksavailable","fields");
x.t("nblocksavailable","number");
x.t("ncsecwcompresssetoemkey","void");
x.t("ncsecwcompresssetoemkey","char");
x.t("scheme","using");
x.t("aborted","parameters");
x.t("main","access");
x.t("main","header");
x.t("main","data");
x.t("main","probably");
x.t("petroleum","survey");
x.t("usage","ncssetgdtpath");
x.t("usage","geographical");
x.t("usage","precedence");
x.t("usage","returns");
x.t("fiile","cncsfile::getpercentcomplete");
x.t("0xe","0xf");
x.t("cncsfile::refreshupdate","ncsfileviewsetinfo");
x.t("cncsfile::refreshupdate","virtual");
x.t("ndatasetbry","uint32");
x.t("ndatasetbry","dataset");
x.t("ndatasetbry","int32");
x.t("ndatasetbry","bottom");
x.t("draws","(blits)");
x.t("[256]","remarks");
x.t("ease","sdk");
x.t("ease","allow");
x.t("ease","six");
x.t("depending","whether");
x.t("depending","previous");
x.t("depending","output");
x.t("specific","file");
x.t("specific","band");
x.t("specific","processing");
x.t("specific","view");
x.t("specific","call");
x.t("ncscbmgetviewfileinfoex","api");
x.t("ncscbmgetviewfileinfoex","ncserror");
x.t("ncscbmgetviewfileinfoex","pmyview-");
x.t("ncscbmgetviewfileinfoex","ncsfileview");
x.t("imagery","network");
x.t("imagery","device");
x.t("imagery","input");
x.t("imagery","renderer");
x.t("imagery","rapidly");
x.t("imagery","drawn");
x.t("imagery","information");
x.t("szinputfilename","&pmyview-");
x.t("szinputfilename","path");
x.t("szinputfilename","[max_path]");
x.t("szinputfilename","&pncsfileview");
x.t("free","bandlist");
x.t("free","memory");
x.t("free","jpeg");
x.t("free","resources");
x.t("free","dynamically");
x.t("pbuffer","uint32");
x.t("pbuffer","remarks");
x.t("pbuffer","jpeg");
x.t("64-bit","file");
x.t("constant","regardless");
x.t("developer","change");
x.t("developer","license");
x.t("developer","prior");
x.t("developer","parameters");
x.t("developer","defined");
x.t("developer","following");
x.t("developer","reading");
x.t("ninputbands","uint32");
x.t("ninputbands","number");
x.t("noutputsize","ncsecwcompressclient");
x.t("several","common");
x.t("validity","resulting");
x.t("mnemonic","value");
x.t("compatibility","cncsfile::getparameter");
x.t("compatibility","cncsfile::setparameter");
x.t("0xf","cncsjp2box");
x.t("cncsfile::readlinebgr","uint8");
x.t("cncsfile::readlinebgr","ncsecwreadstatus");
x.t("int16","ppoutputline");
x.t("cncsfile::readlinergb","uint8");
x.t("cncsfile::readlinergb","ncsecwreadstatus");
x.t("jp2_compress_precinct_height","uint32");
x.t("programming","sdk");
x.t("view","method");
x.t("view","construct");
x.t("view","interactively");
x.t("view","needs");
x.t("view","uint8");
x.t("view","currently");
x.t("view","doing");
x.t("view","downloaded");
x.t("view","file.the");
x.t("view","until");
x.t("view","last");
x.t("view","download");
x.t("view","close");
x.t("view","open");
x.t("view","time");
x.t("view","ncsecwreadstatus");
x.t("view","uint32");
x.t("view","pixels");
x.t("view","pbandlist");
x.t("view","height");
x.t("view","size");
x.t("view","usually");
x.t("view","file");
x.t("view","ndatasettly");
x.t("view","processed");
x.t("view","part");
x.t("view","parameters");
x.t("view","area");
x.t("view","lines");
x.t("view","width");
x.t("view","refresh");
x.t("view","nwidth");
x.t("view","reads");
x.t("view","ecw");
x.t("view","stores");
x.t("view","ncscbmgetviewfileinfo");
x.t("view","end");
x.t("view","bgr");
x.t("view","rgb");
x.t("view","ncsecwcelltype");
x.t("view","bil");
x.t("view","ndatasetbrx");
x.t("view","informative");
x.t("view","ndatasetbry");
x.t("view","specific");
x.t("view","view");
x.t("view","read");
x.t("view","information");
x.t("view","data");
x.t("view","dataset");
x.t("view","query");
x.t("view","jpeg");
x.t("view","image");
x.t("view","opened");
x.t("view","either");
x.t("view","returns");
x.t("view","world");
x.t("view","including");
x.t("view","extents");
x.t("view","difference");
x.t("view","update");
x.t("pncsfileview","uint8");
x.t("pncsfileview","ncsct_uint16");
x.t("pncsfileview","ppoutputline");
x.t("pncsfileview","ncsfileviewsetinfo");
x.t("pncsfileview","uint32");
x.t("pncsfileview","file");
x.t("pncsfileview","&pmyview-");
x.t("pncsfileview","showviewcallback");
x.t("pncsfileview","boolean");
x.t("pncsfileview","nerror");
x.t("pncsfileview","ncsecwcelltype");
x.t("pncsfileview","nbands");
x.t("pncsfileview","remarks");
x.t("pncsfileview","routine");
x.t("pncsfileview","pbgra");
x.t("pncsfileview","prgba");
x.t("pncsfileview","ncsfileviewfileinfoex");
x.t("pncsfileview","prgbtriplets");
x.t("pncsfileview","ncsfileviewfileinfo");
x.t("force","close");
x.t("force","closure");
x.t("force","individual");
x.t("process","cancelling");
x.t("process","necessary");
x.t("process","calls");
x.t("process","releases");
x.t("process","new");
x.t("process","check");
x.t("process","requires");
x.t("process","specified");
x.t("process","performance");
x.t("process","begins");
x.t("process","preadcallback");
x.t("process","ncsecwcompress");
x.t("process","aborted");
x.t("process","appropriate");
x.t("process","using");
x.t("process","returns");
x.t("temporary","file");
x.t("generated","key");
x.t("generated","char");
x.t("developer-created","function");
x.t("ftargetcompression","compressformat");
x.t("ftargetcompression","target");
x.t("actually","ecw\\r\\n");
x.t("actually","achieved");
x.t("ncsfreefileinfoex","void");
x.t("ncsfreefileinfoex","(pinfo)");
x.t("ncsfreefileinfoex","ncsfileviewfileinfoex");
x.t("v3.0","api");
x.t("cmymetadatabox","box");
x.t("explanatory","ascii");
x.t("file.getbox","(ntbox)");
x.t("cnsjp2fileview","file");
x.t("log_low","log_med");
x.t("read","cancelled.\\n");
x.t("read","uint8");
x.t("read","uncompressed");
x.t("read","callback");
x.t("read","cancelled");
x.t("read","line");
x.t("read","mode");
x.t("read","uint32");
x.t("read","pbandlist");
x.t("read","status");
x.t("read","ndatasettlx");
x.t("read","region");
x.t("read","failed");
x.t("read","ntlx");
x.t("read","next");
x.t("read","bil");
x.t("read","view");
x.t("read","data");
x.t("read","image");
x.t("read","successful");
x.t("read","ieee4");
x.t("read","ftlx");
x.t("read","call");
x.t("read","returns");
x.t("//interactive","callback");
x.t("ncsecw_read_cancelled","printf");
x.t("ncsecw_read_cancelled","read");
x.t("(s)","configuration");
x.t("decode","target");
x.t("decode","corrupt");
x.t("valid","compression");
x.t("valid","format");
x.t("valid","location");
x.t("valid","data");
x.t("opening","files");
x.t("opening","configuring");
x.t("opening","via");
x.t("opening","view");
x.t("reasonable","sized");
x.t("runs","compression");
x.t("pointers","parameters");
x.t("pointers","ncsecwcompressclient");
x.t("pointers","buffer");
x.t("ecwcompressiontask","ptask");
x.t("yuv","digital");
x.t("yuv","compress_multi");
x.t("yuv","format");
x.t("ncscbmgetfiletype","(pview)");
x.t("ncscbmgetfiletype","ncsfiletype");
x.t("ncscbmgetfiletype","ncsfileview");
x.t("ncscopyfileinfoex","void");
x.t("ncscopyfileinfoex","&info");
x.t("ncscopyfileinfoex","ncsfileviewfileinfoex");
x.t("projected","coordinate");
x.t("&szprojection","&szdatum");
x.t("geotiff","box");
x.t("although","sdk");
x.t("file.addbox","cncsjp2box");
x.t("breaks","down");
x.t("dworld","iee8");
x.t("established","sdk");
x.t("takes","dataset");
x.t("takes","two");
x.t("takes","world");
x.t("word","siz");
x.t("abort","process");
x.t("cncsrenderer::applyluts","boolean");
x.t("screen","imagery");
x.t("cncsrenderer::freejpegbuffer","uint8");
x.t("cncsrenderer::freejpegbuffer","void");
x.t("cncsrenderer::gettransparent","void");
x.t("cncsrenderer::gettransparent","boolean");
x.t("separate","file/connection");
x.t("separate","functions");
x.t("remarks","method");
x.t("remarks","static");
x.t("remarks","callback");
x.t("remarks","performs");
x.t("remarks","try");
x.t("remarks","current");
x.t("remarks","pull-through");
x.t("remarks","close");
x.t("remarks","open");
x.t("remarks","histogram");
x.t("remarks","ncsfileviewsetinfo");
x.t("remarks","mandatory");
x.t("remarks","releases");
x.t("remarks","default");
x.t("remarks","convert");
x.t("remarks","add");
x.t("remarks","api");
x.t("remarks","obtain");
x.t("remarks","frees");
x.t("remarks","writes");
x.t("remarks","sets");
x.t("remarks","write");
x.t("remarks","overloaded");
x.t("remarks","refresh");
x.t("remarks","fileinfo");
x.t("remarks","initializes");
x.t("remarks","underlying");
x.t("remarks","function");
x.t("remarks","retrieve");
x.t("remarks","reads");
x.t("remarks","ecw");
x.t("remarks","specifies");
x.t("remarks","closes");
x.t("remarks","opens");
x.t("remarks","internal");
x.t("remarks","client");
x.t("remarks","return");
x.t("remarks","given");
x.t("remarks","ncsecwcompressclient");
x.t("remarks","destructor");
x.t("remarks","similar");
x.t("remarks","ncsfilebandinfo");
x.t("remarks","usage");
x.t("remarks","free");
x.t("remarks","view");
x.t("remarks","read");
x.t("remarks","runs");
x.t("remarks","location");
x.t("remarks","optional");
x.t("remarks","data");
x.t("remarks","allocates");
x.t("remarks","utility");
x.t("remarks","copy");
x.t("remarks","ncsfileviewfileinfoex");
x.t("remarks","call");
x.t("remarks","translates");
x.t("remarks","returns");
x.t("remarks","compare");
x.t("remarks","obtains");
x.t("remarks","log");
x.t("remarks","gets");
x.t("remarks","ncsfileviewfileinfo");
x.t("non-ex","call");
x.t("extracting","temporary");
x.t("location","current");
x.t("location","file");
x.t("location","[in]");
x.t("location","sdk");
x.t("location","depending");
x.t("location","information");
x.t("location","gdt");
x.t("ncscs_none","ncscs_greyscale");
x.t("depth","signedness");
x.t("instant","nblocksavailableatsetview");
x.t("schedule","compressing");
x.t("output","pbufferlength");
x.t("output","parameter");
x.t("output","precedence");
x.t("output","size");
x.t("output","file");
x.t("output","tasks");
x.t("output","parameters");
x.t("output","updating");
x.t("output","quality");
x.t("output","ecw");
x.t("output","responsibility");
x.t("output","bands");
x.t("output","application\u2019s");
x.t("output","compressed");
x.t("output","filename");
x.t("output","configuration");
x.t("output","mapper");
x.t("output","jpeg");
x.t("output","dataset");
x.t("output","data");
x.t("output","image");
x.t("output","returns");
x.t("output","world");
x.t("output","buffer");
x.t("larger","compression");
x.t("larger","depending");
x.t("dimensions","compressed");
x.t("dimensions","less");
x.t("specifying","preferred");
x.t("specifying","desired");
x.t("specifying","whether");
x.t("specifying","bands");
x.t("specifying","output");
x.t("applicable","epsg");
x.t("applicable","returns");
x.t("cncsfile::getpercentcompletetotalblocksinview","remarks");
x.t("cncsfile::getpercentcompletetotalblocksinview","int32");
x.t("dynamic","data");
x.t("context","parameters");
x.t("context","pcliprect");
x.t("context","inherits");
x.t("context","progressive");
x.t("cncsrenderer::setview","parameters");
x.t("cncsrenderer::setview","entire");
x.t("transfer","pending");
x.t("elevel","parameters");
x.t("elevel","remarks");
x.t("elevel","cncslog");
x.t("elevel","log");
x.t("cncserror::operator","const");
x.t("cncserror::operator","bool");
x.t("data","example");
x.t("data","available");
x.t("data","currently");
x.t("data","required");
x.t("data","void");
x.t("data","current");
x.t("data","type");
x.t("data","new");
x.t("data","items");
x.t("data","want");
x.t("data","objects");
x.t("data","false");
x.t("data","become");
x.t("data","loaded");
x.t("data","structures");
x.t("data","resource");
x.t("data","band");
x.t("data","ecw");
x.t("data","may");
x.t("data","compressed");
x.t("data","directory");
x.t("data","given");
x.t("data","cncsfile::getepsgcode");
x.t("data","nbands");
x.t("data","variety");
x.t("data","process");
x.t("data","read");
x.t("data","established");
x.t("data","abort");
x.t("data","output");
x.t("data","defined");
x.t("data","structure");
x.t("data","ieee8");
x.t("data","corresponding");
x.t("data","returns");
x.t("data","director");
x.t("data","associated");
x.t("data","including");
x.t("data","content");
x.t("data","resources");
x.t("jpeg","file");
x.t("jpeg","standard");
x.t("jpeg","memory");
x.t("jpeg","output");
x.t("jpeg","2000");
x.t("jpeg","buffer");
x.t("behaves","exactly");
x.t("information","available");
x.t("information","compression");
x.t("information","jp2_decompress_layers");
x.t("information","current");
x.t("information","open");
x.t("information","obtained");
x.t("information","details");
x.t("information","file");
x.t("information","requirements");
x.t("information","allows");
x.t("information","pertinent");
x.t("information","error");
x.t("information","ncscbmgetviewinfo");
x.t("information","returned");
x.t("information","null");
x.t("information","specific");
x.t("information","view");
x.t("information","information");
x.t("information","data");
x.t("information","image");
x.t("information","application");
x.t("information","structure");
x.t("information","returns");
x.t("information","associated");
x.t("routine","parameters");
x.t("routine","called");
x.t("interoperability","graphics");
x.t("dataset","coordinate");
x.t("dataset","top");
x.t("dataset","coordinates");
x.t("dataset","case");
x.t("dataset","bottom");
x.t("dataset","cells");
x.t("temp","directory");
x.t("configure","compression");
x.t("optional","wish");
x.t("optional","formatting");
x.t("optional","pcancelcallback");
x.t("optional","printf");
x.t("optional","additional");
x.t("optional","developer-created");
x.t("optional","output");
x.t("inserted","compression");
x.t("internally","compress_yuv");
x.t("internally","instead");
x.t("query","returns");
x.t("pcs","european");
x.t("pcs","code");
x.t("writelinebil","writereadline");
x.t("inherits","cncsjp2fileview");
x.t("inherits","cncsfile");
x.t("rectilinear","conversion");
x.t("capabilities","word");
x.t("file.getuuidbox","(uuid)");
x.t("&stream","cncsfile::readlineabgr");
x.t("cncsfile::readlinebil","uint8");
x.t("cncsfile::readlinebil","uint16");
x.t("cncsfile::readlinebil","ncsecwreadstatus");
x.t("cncsfile::readlinebil","uint32");
x.t("cncsfile::readlinebil","int8");
x.t("cncsfile::readlinebil","int64");
x.t("cncsfile::readlinebil","ncsecwcelltype");
x.t("cncsfile::readlinebil","int16");
x.t("cncsfile::readlinebil","int32");
x.t("cncsfile::readlinebil","ieee4");
x.t("cncsfile::readlinebil","ieee8");
x.t("cncsfile::readlinebil","uint64");
x.t("view.setparameter","jp2:compliance:profile:type");
x.t("view.setparameter","jpc:d");
x.t("ddatasetbrx","top");
x.t("ddatasetbrx","int32");
x.t(".jp2","compression");
x.t("cncsfile::writestatus","void");
x.t("cncsfile::writestatus","uint32");
x.t("draw","area");
x.t("draw","device");
x.t("draw","internal");
x.t("draw","image");
x.t("draw","intersection");
x.t("rendering","device");
x.t("non-transparent","mode");
x.t("becomes",".jgw");
x.t("becomes",".tfw");
x.t("messaging","methods");
x.t("employed","writing");
x.t("image","description");
x.t("image","components");
x.t("image","line");
x.t("image","mandatory");
x.t("image","datum");
x.t("image","regardless");
x.t("image","height");
x.t("image","size");
x.t("image","block");
x.t("image","file");
x.t("image","designated");
x.t("image","component");
x.t("image","transparently");
x.t("image","parameters");
x.t("image","projection");
x.t("image","composed");
x.t("image","web");
x.t("image","cell");
x.t("image","width");
x.t("image","ecw");
x.t("image","compressed");
x.t("image","scan");
x.t("image","internal");
x.t("image","georeferenced");
x.t("image","registration");
x.t("image","drawn");
x.t("image","bil");
x.t("image","layers");
x.t("image","ncscs_none");
x.t("image","data");
x.t("image","setting");
x.t("image","remaining");
x.t("image","returns");
x.t("image","world");
x.t("image","directions");
x.t("image","remains");
x.t("appropriate","sdk");
x.t("appropriate","correspondence");
x.t("appropriate","transparency");
x.t("appropriate","code");
x.t("appropriate","e.g");
x.t("ncscbmclosefileview","ncserror");
x.t("ncscbmclosefileview","closes");
x.t("ncscbmclosefileview","pmyview-");
x.t("ncscbmclosefileview","pass");
x.t("ncscbmclosefileview","ncsfileview");
x.t("bit","default");
x.t("bit","parameters");
x.t("bit","value");
x.t("bit","depth");
x.t("bit","bit");
x.t("ecwpcache","created");
x.t("signedness","data");
x.t("defined","functions");
x.t("defined","separate");
x.t("defined","application");
x.t("writereadline","refreshupdateex");
x.t("writereadline","decompression");
x.t("jp2:compliance:profi","le:type");
x.t("ecwp://localhost/sampleiws/","images/usa/sandiego3i/ecw");
x.t("inline","virtual");
x.t("ddatasetbry","remarks");
x.t("ddatasetbry","bottom");
x.t("nquality","desired");
x.t("nquality","remarks");
x.t("nquality","integer");
x.t("probably","interested");
x.t("interested","using");
x.t("newly","altered");
x.t("fax","770");
x.t("documented","below");
x.t("documented","fall");
x.t("documented","api");
x.t("documented","namely");
x.t("documented","section");
x.t("utility","functions");
x.t("utility","function");
x.t("application","example");
x.t("application","wise");
x.t("application","method");
x.t("application","ncsecwcompressopen");
x.t("application","whenever");
x.t("application","advised");
x.t("application","api");
x.t("application","programmer");
x.t("application","parameters");
x.t("application","developers");
x.t("application","moving");
x.t("application","opens");
x.t("application","simply");
x.t("application","code");
x.t("application","additional");
x.t("application","developer");
x.t("application","read");
x.t("application","inherits");
x.t("application","correctly");
x.t("application","work");
x.t("application","ncscbmgetviewsetinfo");
x.t("application","load");
x.t("application","specify");
x.t("application","generally");
x.t("application","contains");
x.t("prefreshcallback","ncsfileview");
x.t("successful","false");
x.t("successful","ncsecw_read_failed");
x.t("prgba","ncscbmsetfileview");
x.t("prgba","remarks");
x.t("prgba","inline");
x.t("prgba","pointer");
x.t("blue","alpha");
x.t("values","example");
x.t("values","psrc");
x.t("values","corresponds");
x.t("values","parameters");
x.t("values","profile");
x.t("values","cell");
x.t("values","band");
x.t("values","others");
x.t("values","function");
x.t("values","main");
x.t("values","log_low");
x.t("values","read");
x.t("values","image");
x.t("values","used");
x.t("values","returns");
x.t("values","associated");
x.t("pbgra","ncscbmreadviewlinebil");
x.t("pbgra","inline");
x.t("pbgra","pointer");
x.t("scale","need");
x.t("int32","ppoutputline");
x.t("int32","nepsgcode");
x.t("int32","pbandlist");
x.t("int32","pndatasetx");
x.t("int32","ndatasettlx");
x.t("int32","pndatasety");
x.t("int32","ndatasettly");
x.t("int32","ddatasettlx");
x.t("int32","ddatasettly");
x.t("int32","ndatasetx");
x.t("int32","ndatasety");
x.t("int32","maximum");
x.t("int32","nwidth");
x.t("int32","pnepsg");
x.t("int32","cncsfile::getepsgcode");
x.t("int32","nbands");
x.t("int32","nheight");
x.t("int32","nband");
x.t("int32","ndatasetbrx");
x.t("int32","ndatasetbry");
x.t("int32","cncsfile::getpercentcompletetotalblocksinview");
x.t("int32","ddatasetbrx");
x.t("int32","ddatasetbry");
x.t("int32","nquality");
x.t("int32","nepsg");
x.t("int32","cncsfile::getpercentcomplete");
x.t("generation","j2i");
x.t("recursive","process");
x.t("prevent","stack");
x.t("allocates","new");
x.t("ieee4","factualcompression");
x.t("ieee4","ppinputarray");
x.t("ieee4","ppoutputline");
x.t("ieee4","fvalue");
x.t("ieee4","ftargetcompression");
x.t("ieee4","dequantization");
x.t("occurring","parameters");
x.t("512","default");
x.t("512","1024");
x.t("cncsfile::getbox","uint32");
x.t("cncsfile::getbox","virtual");
x.t("cncsfile::setparameter","parameter");
x.t("cncsfile::setparameter","void");
x.t("dworldbrx","0.0");
x.t("dworldbrx","view");
x.t("dworldbrx","ieee8");
x.t("dworldbrx","bottom");
x.t("render","ecw");
x.t("case","cncsfile");
x.t("s\\n","ncsgeterrortext");
x.t("called","library");
x.t("called","once");
x.t("called","ensuring");
x.t("called","initialize");
x.t("called","sdk");
x.t("called","commence");
x.t("called","different");
x.t("called","release");
x.t("called","preadcallback");
x.t("called","successfully");
x.t("called","ncsecwcompress");
x.t("called","subclass");
x.t("called","progressive");
x.t("called","ncsfileviewfileinfo");
x.t("&pncsfileview","null");
x.t("structure","example");
x.t("structure","passed");
x.t("structure","below");
x.t("structure","state");
x.t("structure","freed");
x.t("structure","includes");
x.t("structure","populated");
x.t("structure","parameters");
x.t("structure","calculate");
x.t("structure","preadcallback");
x.t("structure","ncsecwcompressclient");
x.t("structure","e.g");
x.t("structure","value");
x.t("structure","application");
x.t("structure","cncsfile::getfilemimetype");
x.t("structure","created");
x.t("structure","used");
x.t("structure","corresponding");
x.t("structure","containing");
x.t("structure","returns");
x.t("structure","contains");
x.t("ncscfg_ecwp_cache_location","char");
x.t("problem","using");
x.t("ncs_file_ecw","ncs_file_jp2");
x.t("ncs_file_ecw","printf");
x.t("ncs_file_ecw","ncs_file_unknown");
x.t("nepsg","file.getepsgcode");
x.t("nepsg","else");
x.t("nepsg","printf");
x.t("nepsg","char");
x.t("nepsg","epsg");
x.t("nepsg","cncsfile::getepsgcode");
x.t("cncsfile::addbox","cncsjp2box");
x.t("cncsfile::addbox","virtual");
x.t("cncsjp2xmlbox","cncsjp2uuidbox");
x.t("decomposition","[out]");
x.t("decomposition","returns");
x.t("cncsfile::getfilemimetype","char");
x.t("cncsfile::getfilemimetype","remarks");
x.t("deprecated","exists");
x.t("deprecated","generally");
x.t("cncsfile::open","cncsjpciostream");
x.t("cncsfile::open","char");
x.t("cncsfile::open","virtual");
x.t("cncsfile::open","cncserror");
x.t("pcallback","refresh");
x.t("pcallback","ncsfileview");
x.t("dworldbry","0.0");
x.t("dworldbry","view");
x.t("dworldbry","remarks");
x.t("dworldbry","int32");
x.t("dworldbry","bottom");
x.t("character","example");
x.t("classes","full");
x.t("classes","working");
x.t("classes","cncserror::cncserror");
x.t("classes","methods");
x.t("classes","using");
x.t("two","interfaces");
x.t("two","kinds");
x.t("two","arguments");
x.t("two","methodologies");
x.t("two","objects");
x.t("two","metadata");
x.t("two","paradigms");
x.t("two","cncserror");
x.t("two","different");
x.t("setfileviews","finished");
x.t("setfileviews","done");
x.t("done","parameters");
x.t("done","function");
x.t("done","client");
x.t("done","even");
x.t("ftlx","top");
x.t("ftlx","ftly");
x.t("ftlx","ieee8");
x.t("decompressed","data");
x.t("decompressed","image");
x.t("users","temp");
x.t("users","documented");
x.t("requiring","extracting");
x.t("nblocksinview","total");
x.t("nblocksinview","uint32");
x.t("nblocksinview","nblocksavailable");
x.t("ncsgetfilemimetype","(pview)");
x.t("otherwise","compression");
x.t("otherwise","returns");
x.t("errorchecking","return");
x.t("cncsrenderer","declared");
x.t("cncsrenderer","standard");
x.t("cncsrenderer","cncserror");
x.t("cncsrenderer","whose");
x.t("cncsrenderer","[virtual]");
x.t("cncsrenderer","cncsrenderer");
x.t("cncsrenderer","classes");
x.t("cncsrenderer","great");
x.t("cncsrenderer","class");
x.t("cncsrenderer","object");
x.t("unparse","method");
x.t("protocol","string");
x.t("protocol","hostname");
x.t("cncsfile::refreshupdateex","ncsfileviewsetinfo");
x.t("cncsfile::refreshupdateex","virtual");
x.t("cncsfile::refreshupdateex","parameters");
x.t("cncsfile::refreshupdateex","instead");
x.t("cncsfile::refreshupdateex","developer-defined");
x.t("integer","specified");
x.t("integer","variable");
x.t("integer","buffer");
x.t("percentage","total");
x.t("percentage","complete");
x.t("percentage","image");
x.t("cncsfile::getprojectionanddatum","static");
x.t("cncsfile::getprojectionanddatum","4326");
x.t("cncsfile::getprojectionanddatum","const");
x.t("unc","location");
x.t("65528","view.setparameter");
x.t("bil-formatted","input");
x.t("incorporated","single-layered");
x.t("log_level1","const");
x.t("applications","ninoutsizex");
x.t("applications","mapper");
x.t("applications","based");
x.t("based","available");
x.t("based","current");
x.t("based","total");
x.t("based","sdk");
x.t("based","recent");
x.t("based","probable");
x.t("decompression","library");
x.t("decompression","compression");
x.t("decompression","related");
x.t("decompression","functions");
x.t("decompression","configuration");
x.t("non","view-specific");
x.t("non","view");
x.t("setview","library");
x.t("setview","height");
x.t("setview","top");
x.t("setview","width");
x.t("setview","readlinexxx");
x.t("setview","information");
x.t("setview","bottom");
x.t("opened","ecwp://");
x.t("opened","write");
x.t("opened","ecw");
x.t("opened","output");
x.t("opened","progressive");
x.t("ftly","top");
x.t("ftly","fbrx");
x.t("ftly","ieee8");
x.t("correctly","allocated");
x.t("fcwrotationdegrees","clockwise");
x.t("fcwrotationdegrees","ncsfilecolorspace");
x.t("szoutputfilename","path");
x.t("szoutputfilename","[max_path]");
x.t("compress_uint8","single");
x.t("gdt","files");
x.t("gdt","locations");
x.t("gdt","path");
x.t("gdt","format");
x.t("gdt","data");
x.t("copy","contents");
x.t("copy","constructor");
x.t("copy","values");
x.t("refreshupdateex","various");
x.t("indices","read");
x.t("indices","specifying");
x.t("great","example");
x.t("cncsrenderer::drawimage","ncserror");
x.t("cncsrenderer::drawimage","hdc");
x.t("optionally","collect");
x.t("work","managing");
x.t("work","required");
x.t("work","constructor");
x.t("letters","extension");
x.t("cncslog::ncsloglevel","elevel");
x.t("call","ncscbmsetfileview");
x.t("call","cncsrenderer::writejpeg");
x.t("call","drawimage");
x.t("call","cncsrenderer::calchistograms");
x.t("call","file");
x.t("call","obtain");
x.t("call","allows");
x.t("call","afterwards");
x.t("call","ncsecw");
x.t("call","readimage");
x.t("call","ncscbmgetviewfileinfo");
x.t("call","ncscbmopenfileview");
x.t("call","reimplemented");
x.t("call","value");
x.t("call","depending");
x.t("call","ncscbmgetviewfileinfoex");
x.t("call","force");
x.t("call","cncsrenderer::setview");
x.t("call","call");
x.t("call","used");
x.t("call","conjunction");
x.t("call","returns");
x.t("ncsfileviewfileinfoex","pinfo");
x.t("ncsfileviewfileinfoex","pdst");
x.t("ncsfileviewfileinfoex","psrc");
x.t("ncsfileviewfileinfoex","ncsfileviewsetinfo");
x.t("ncsfileviewfileinfoex","info");
x.t("ncsfileviewfileinfoex","&info");
x.t("ncsfileviewfileinfoex","ppncsfileviewfileinfoex");
x.t("ncsfileviewfileinfoex","ppncsfileviewfileinfo");
x.t("ncsfileviewfileinfoex","typedef");
x.t("ncsfileviewfileinfoex","cncsfile::getfileinfo");
x.t("ncsfileviewfileinfoex","free");
x.t("ncsfileviewfileinfoex","remarks");
x.t("ncsfileviewfileinfoex","structure");
x.t("ncsfileviewfileinfoex","ncsmalloc");
x.t("ncsfileviewfileinfoex","struct");
x.t("numbers","source");
x.t("numbers","read");
x.t("ieee8","ppoutputline");
x.t("ieee8","fcompressionseconds");
x.t("ieee8","fbrx");
x.t("ieee8","foriginx");
x.t("ieee8","fbry");
x.t("ieee8","foriginy");
x.t("ieee8","pdworldx");
x.t("ieee8","dworldtlx");
x.t("ieee8","pdworldy");
x.t("ieee8","dworldtly");
x.t("ieee8","fcellincrementx");
x.t("ieee8","fcellincrementy");
x.t("ieee8","dworldbrx");
x.t("ieee8","dworldbry");
x.t("ieee8","ftlx");
x.t("ieee8","ftly");
x.t("ieee8","fcwrotationdegrees");
x.t("ieee8","fcompressionmbsec");
x.t("real","world");
x.t("created","within");
x.t("created","parameters");
x.t("created","sdk");
x.t("created","jpeg");
x.t("created","using");
x.t("commencing","compression");
x.t("ncsmalloc","sizeof");
x.t("controls","type");
x.t("giving","application");
x.t("readline","methods");
x.t("readline","call");
x.t("subclass","cncsfile");
x.t("subclass","parameters");
x.t("subclass","two");
x.t("bfreecache","true");
x.t("bfreecache","specify");
x.t("plast","last");
x.t("plast","null");
x.t("mapping","available");
x.t("file.getxmlbox","(pbox)");
x.t("jp2_compress_tile_height","uint32");
x.t("packet","markers");
x.t("order","layer");
x.t("order","nwidth");
x.t("order","instead");
x.t("cncsfile::writecancel","(void)");
x.t("cncsfile::writecancel","bool");
x.t("cncsrenderer::cncsrenderer","default");
x.t("immediately","call");
x.t("drawing","imagery");
x.t("cncserror::geterrornumber","[inline]");
x.t("cncserror::geterrornumber","ncserror");
x.t("either","ncs_file_jp2");
x.t("either","function");
x.t("either","ecw");
x.t("either","ncs_file_ecw");
x.t("either","two");
x.t("either","image/ecw");
x.t("pointer","compression");
x.t("pointer","uint8");
x.t("pointer","current");
x.t("pointer","ncsfileviewsetinfo");
x.t("pointer","uint32");
x.t("pointer","file");
x.t("pointer","box");
x.t("pointer","setviewinfo");
x.t("pointer","exists");
x.t("pointer","array");
x.t("pointer","next");
x.t("pointer","disk");
x.t("pointer","underlying");
x.t("pointer","private");
x.t("pointer","returned");
x.t("pointer","filename");
x.t("pointer","hostname");
x.t("pointer","client");
x.t("pointer","variable");
x.t("pointer","structure");
x.t("pointer","protocol");
x.t("pointer","integer");
x.t("pointer","ncsfileviewfileinfoex");
x.t("pointer","associated");
x.t("pointer","struct");
x.t("pointer","buffer");
x.t("pointer","ncsfileview");
x.t("used","exist");
x.t("used","keep");
x.t("used","various");
x.t("used","uint32");
x.t("used","during");
x.t("used","raster");
x.t("used","via");
x.t("used","specified");
x.t("used","preference");
x.t("used","adjust");
x.t("used","write");
x.t("used","input");
x.t("used","metadata");
x.t("used","ecw");
x.t("used","purpose");
x.t("used","free");
x.t("used","read");
x.t("used","configure");
x.t("used","render");
x.t("used","application");
x.t("used","ncscfg_ecwp_cache_enabled");
x.t("used","specify");
x.t("bottom","right");
x.t("starts","uint32");
x.t("starts","compressing");
x.t("rounded","based");
x.t("individual","view");
x.t("following","ecw_cell_units_meters");
x.t("following","data");
x.t("following","utility");
x.t("following","used");
x.t("style","datum");
x.t("style","projection");
x.t("style","function");
x.t("style","format");
x.t("wgs84","null");
x.t("corresponding","open");
x.t("corresponding","developer\u2019s");
x.t("corresponding","added");
x.t("corresponding","epsg");
x.t("ncscbmgetviewsetinfo","function");
x.t("contained","parameter");
x.t("contained","single");
x.t("translates","epsg");
x.t("translates","mapper");
x.t("system","open");
x.t("system","default");
x.t("system","parameters");
x.t("system","code");
x.t("relevant","sdk");
x.t("image/ecw","image/jp2");
x.t("le:type","uint32");
x.t("cncsfile::getpercentcomplete","remarks");
x.t("cncsfile::getpercentcomplete","int32");
x.t("ppprojection","char");
x.t("ppprojection","output");
x.t("nbackgroundcolor","value");
x.t("nbackgroundcolor","remarks");
x.t("cncslog","log_level1");
x.t("inequality","phone");
x.t("inequality","operator");
x.t("using","blocking");
x.t("using","build");
x.t("using","api");
x.t("using","specified");
x.t("using","refresh");
x.t("using","ecw");
x.t("using","ncsecwcompressallocclient");
x.t("using","eerror");
x.t("using","data");
x.t("using","terms");
x.t("2000","compression");
x.t("2000","files");
x.t("2000","unknown");
x.t("2000","file");
x.t("2000","images");
x.t("2000","input");
x.t("2000","format");
x.t("2000","file's");
x.t("2000","main");
x.t("2000","fiile");
x.t("2000","imagery");
x.t("2000","reader");
x.t("conjunction","view");
x.t("prgbtriplets","ncscbmreadviewlinebgra");
x.t("prgbtriplets","rgb");
x.t("prgbtriplets","remarks");
x.t("prgbtriplets","ereadstatus");
x.t("prgbtriplets","buffer");
x.t("nbrx","uint32");
x.t("nbrx","bottom");
x.t("nbrx","nbry");
x.t("setting","required");
x.t("setting","raw");
x.t("containing","parameter");
x.t("containing","default");
x.t("containing","details");
x.t("containing","georeferencing");
x.t("ecompressformat","compresshint");
x.t("ecompressformat","specifies");
x.t("sought","rate");
x.t("ncsgetepsgcode","char");
x.t("ncsgetepsgcode","ncserror");
x.t("ncsgetepsgcode","nutm11");
x.t("nutm11","nad27");
x.t("nutm11","[out]");
x.t("geodatausage","ngeodatausage");
x.t("geodatausage","enumeration");
x.t("class","leaves");
x.t("class","create");
x.t("class","2compliant");
x.t("class","wraps");
x.t("class","compliant");
x.t("class","simple");
x.t("class","cncsjp2file");
x.t("class","cncsfile");
x.t("class","provides");
x.t("class","clip");
x.t("class","reference");
x.t("class","documentation");
x.t("class","main");
x.t("class","application");
x.t("class","cncsrenderer");
x.t("class","used");
x.t("remaining","downloaded");
x.t("calculated","specific");
x.t("calculated","dimensions");
x.t("jp2_compress_layers","uint32");
x.t("file-oriented","objects");
x.t("file-oriented","means");
x.t("terms","api");
x.t("returns","mime");
x.t("returns","formatted");
x.t("returns","void");
x.t("returns","current");
x.t("returns","type");
x.t("returns","ncsecwreadstatus");
x.t("returns","new");
x.t("returns","false");
x.t("returns","true");
x.t("returns","const");
x.t("returns","european");
x.t("returns","none");
x.t("returns","parameters");
x.t("returns","boolean");
x.t("returns","ncsfiletype");
x.t("returns","ncserror");
x.t("returns","cncserror");
x.t("returns","number");
x.t("returns","reference");
x.t("returns","value");
x.t("returns","applicable");
x.t("returns","percentage");
x.t("returns","pointer");
x.t("returns","returns");
x.t("returns","associated");
x.t("succeeds","example");
x.t("succeeds","cncsfile::convertdatasettoworld");
x.t("succeeds","cncsfile::convertworldtodataset");
x.t("succeeds","notes");
x.t("succeeds","cncsrenderer::writeworldfile");
x.t("succeeds","cncsrenderer::writejpeg");
x.t("succeeds","cncsrenderer::readimage");
x.t("succeeds","cncsrenderer::readlinebgr");
x.t("succeeds","cncsfile::detectgdtpath");
x.t("succeeds","ncscbmgetviewfileinfo");
x.t("succeeds","cncsrenderer::freejpegbuffer");
x.t("succeeds","decompression");
x.t("succeeds","class");
x.t("pass","false");
x.t("nbry","uint32");
x.t("nbry","nsizex");
x.t("nbry","bottom");
x.t("reader","cbufferediostream");
x.t("cfileiostream","default");
x.t("per","reading");
x.t("ncscfg_ecwp_cache_enabled","boolean");
x.t("ncsecwsetiocallbacks","ncserror");
x.t("i/o","instead");
x.t("across","cellsizeunits");
x.t("expressed","degrees");
x.t("company","key");
x.t("company","name");
x.t("erdas","generating");
x.t("erdas","applications");
x.t("erdas","returns");
x.t("128","256");
x.t("manually","however");
x.t("overrides","methods");
x.t("ecw\\r\\n","cncsfile::getfileviewsetinfo");
x.t("pbgrtriplet","[virtual]");
x.t("pbgrtriplet","inline");
x.t("pbgrtriplet","pointer");
x.t("prgbtriplet","byte");
x.t("prgbtriplet","[virtual]");
x.t("prgbtriplet","inline");
x.t("prgbtriplet","pointer");
x.t("georeferencing","metadata");
x.t("georeferencing","information");
x.t("intersection","regions");
x.t("intersection","input");
x.t("win32","device");
x.t("compare","two");
x.t("compare","object");
x.t("3400","fax");
x.t("associated","library");
x.t("associated","currently");
x.t("associated","source");
x.t("associated","open");
x.t("associated","histogram");
x.t("associated","single");
x.t("associated","file");
x.t("associated","ncserror");
x.t("associated","cncserror");
x.t("associated","function");
x.t("associated","epsg");
x.t("associated","memory");
x.t("associated","structure");
x.t("associated","resources");
x.t("associated","ncsfileview");
x.t("obtains","current");
x.t("obtains","meaningful");
x.t("obtains","generic");
x.t("ncscbmreadviewlinebgr","ncsecwreadstatus");
x.t("ncscbmreadviewlinebgr","pncsfileview");
x.t("ncscbmreadviewlinebgr","ncsfileview");
x.t("ncscbmreadviewlinergb","ncsecwreadstatus");
x.t("ncscbmreadviewlinergb","pncsfileview");
x.t("ncscbmreadviewlinergb","ncsfileview");
x.t("world","coordinate");
x.t("world","top");
x.t("world","file");
x.t("world","coordinates");
x.t("world","filename");
x.t("world","bottom");
x.t("without","doing");
x.t("without","requiring");
x.t("ncsct_uint64","ncsct_int8");
x.t("szdesc","ncsfilebandinfo");
x.t("names","callback");
x.t("limited","stack");
x.t("load","uncompressed");
x.t("load","ppinputarray");
x.t("load","input");
x.t("filled","ncsecwcompressclose");
x.t("occur","szinputfilename");
x.t("directions","ninputbands");
x.t("director","returns");
x.t("gml","box");
x.t("getfileinfo","setfileinfo");
x.t("cncsfile::getclientdata","void");
x.t("cncsfile::getclientdata","remarks");
x.t("pjp2file","file.getfile");
x.t("file.getfiletype","ncs_file_ecw");
x.t("jp2","file");
x.t("dequantization","parameter");
x.t("advise","progress");
x.t("deteriorate","necessary");
x.t("behavior","changed");
x.t("&error","[inline]");
x.t("&error","remarks");
x.t("&error","copy");
x.t("cncserror::geterrormessage","char");
x.t("log_higher","returns");
x.t("operator","parameters");
x.t("operator","checking");
x.t("passing","true");
x.t("passing","real");
x.t("szurlpath","name");
x.t("szurlpath","ncsfileview");
x.t("ereadstatus","ncscbmreadviewlinebil");
x.t("ereadstatus","ncsecw_read_ok");
x.t("ereadstatus","ncscbmreadviewlinebilex");
x.t("ereadstatus","ncsecw_read_cancelled");
x.t("ereadstatus","ncscbmreadviewlinergb");
x.t("j2i","index");
x.t("struct","uint8");
x.t("struct","void");
x.t("struct","open");
x.t("struct","uint32");
x.t("struct","//members");
x.t("struct","duplicate");
x.t("struct","parameters");
x.t("struct","ncsecwcompressclient");
x.t("struct","e.g");
x.t("struct","ecwcompressiontask");
x.t("struct","copy");
x.t("struct","returns");
x.t("struct","contains");
x.t("flexibility","ease");
x.t("flexibility","jpeg");
x.t("nblocksavailableatsetview","uint32");
x.t("nblocksavailableatsetview","number");
x.t("including","preadcallback");
x.t("including","view");
x.t("including","names");
x.t("achieved","ecompressformat");
x.t("&pview","null");
x.t("unsigned","bit");
x.t("progressive","mode");
x.t("progressive","read");
x.t("images/usa/sandiego3i/ecw","true");
x.t("success","otherwise");
x.t("cncsfile::writelinebil","cncserror");
x.t("cncsfile::writelinebil","ncsecwcelltype");
x.t("ptext","char");
x.t("ptext","parameters");
x.t("reading","files");
x.t("reading","input");
x.t("reading","cbufferediostream");
x.t("reading","separate");
x.t("reading","data");
x.t("reading","jpeg");
x.t("reading","world");
x.t("views","open");
x.t("views","file");
x.t("buffer","passed");
x.t("buffer","receives");
x.t("buffer","bgra");
x.t("buffer","rgba");
x.t("buffer","once");
x.t("buffer","ppoutputline");
x.t("buffer","size");
x.t("buffer","previously");
x.t("buffer","parameters");
x.t("buffer","cell");
x.t("buffer","device");
x.t("buffer","band");
x.t("buffer","store");
x.t("buffer","receive");
x.t("buffer","returned");
x.t("buffer","rgb");
x.t("buffer","drawn");
x.t("buffer","ready");
x.t("buffer","nbands");
x.t("buffer","read");
x.t("buffer","pointers");
x.t("buffer","output");
x.t("buffer","image");
x.t("buffer","nquality");
x.t("buffer","cncsrenderer");
x.t("buffer","load");
x.t("even","previous");
x.t("uint64","ppoutputline");
x.t("uint64","ninputsize");
x.t("uint64","noffset");
x.t("uint64","poffset");
x.t("uint64","noutputsize");
x.t("uint64","specify");
x.t("fcompressionmbsec","uint64");
x.t("c:\\\\foo.ecw","false");
x.t("c:\\\\foo.ecw","&pview");
x.t("ncs_file_unknown","example");
x.t("ncs_file_unknown","parameters");
x.t("representing","total");
x.t("representing","box");
x.t("cncsfile::getncsfileview","remarks");
x.t("cncsfile::getncsfileview","ncsfileview");
x.t("cncsfile::setcompressclient","cncserror");
x.t("cncsfile::setcompressclient","struct");
x.t("descriptive","error");
x.t("log","file");
x.t("log","error");
x.t("log","level");
x.t("log","cncslog::ncsloglevel");
x.t("equality","cncserror::operator");
x.t("contains","compression");
x.t("contains","static");
x.t("contains","descriptions");
x.t("contains","details");
x.t("contains","zero");
x.t("contains","similar");
x.t("contains","information");
x.t("contains","image");
x.t("umbrellas","apis");
x.t("extents","active");
x.t("extents","reset");
x.t("extents","appropriately");
x.t("extents","previously");
x.t("extents","lie");
x.t("extents","necessarily");
x.t("extents","amount");
x.t("extents","view");
x.t("extents","image");
x.t("extents","extents");
x.t("ncsfileview","instance");
x.t("ncsfileview","ppncsfileview");
x.t("ncsfileview","pview");
x.t("ncsfileview","pncsfileview");
x.t("ncsfileview","remarks");
x.t("ncsfileview","structure");
x.t("ncsfileview","pointer");
x.t("ncsfileview","struct");
x.t("ncsfileview","cncsfile::getncsfileview");
x.t("difference","non-ex");
x.t("ncsfileviewfileinfo","//additional");
x.t("ncsfileviewfileinfo","ppncsfileviewfileinfo");
x.t("ncsfileviewfileinfo","typedef");
x.t("ncsfileviewfileinfo","additional");
x.t("ncsfileviewfileinfo","remarks");
x.t("ncsfileviewfileinfo","structure");
x.t("ncsfileviewfileinfo","ncsfileviewfileinfoex");
x.t("gets","view");
x.t("pviewinfo","ncscbmopenfileview");
x.t("blending","compatible");
x.t("cells","sample");
x.t("cells","uint32");
x.t("cells","ddatasettlx");
x.t("cells","dworldtlx");
x.t("cells","input");
x.t("cells","nbands");
x.t("cells","nheight");
x.t("cells","ieee8");
x.t("cells","rounded");
x.t("cells","returns");
x.t("specify","callback");
x.t("specify","status");
x.t("specify","file");
x.t("specify","resolution");
x.t("specify","whether");
x.t("specify","maximun");
x.t("specify","view");
x.t("specify","dimensions");
x.t("ecwp","cache");
x.t("ecwp","stream");
x.t("resources","available");
x.t("resources","parameters");
x.t("resources","may");
x.t("resources","allocated");
x.t("resources","decompressed");
x.t("resources","used");
x.t("resources","associated");
x.t("remains","downloaded");
x.t("remains","backwards");
x.t("remains","constant");
x.t("negative","zero");
x.t("content","file");
x.t("content","band");
x.t("generally","specified");
x.t("generally","follow");
x.t("generally","called");
x.t("generally","cncsfile::refreshupdateex");
x.t("clean","finally");
x.t("threadsafe","called");
x.t("commencement","compression");
x.t("dynamically","allocated");
x.t("server","parameters");
x.t("ncsgetprojectionanddatum","4326");
x.t("ncsgetprojectionanddatum","ncserror");
x.t("ncsgetprojectionanddatum","int32");
x.t("object","providing");
x.t("object","open");
x.t("object","access");
x.t("object","cncserror::operator==");
x.t("object","parameters");
x.t("object","ncserror");
x.t("object","override");
x.t("object","existing");
x.t("object","destructor");
x.t("object","screen");
x.t("object","output");
x.t("object","optional");
x.t("object","used");
x.t("object","compare");
x.t("object","returns");
x.t("object","cncserror::geterrormessage");
x.t("uuid","0x0,0x1,0x2,0x3,0x4,0x5,0x6,0x7");
x.t("uuid","cncsjp2box");
x.t("uuid","box");
x.t("uuid","16-byte");
x.t("uuid","colr");
x.t("uuid","value");
x.t("uuid","matching");
x.t("ncsuuid","uuid");
x.t("matching","argument");
x.t("plinesteps","line");
x.t("plinesteps","null");
x.t("update","intended");
x.t("update","routine");
x.t("update","done");
x.t("update","returns");
x.t("pcompressclient","ecw");
x.t("pcompressclient","remarks");
x.t("updated","testing");
x.t("hdc","hdevicecontext");
x.t(".tfw","parameters");
}
